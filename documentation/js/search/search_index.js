var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.116,1,1.646]],["body/controllers/AppController.html",[0,1.759,1,2.594,2,1.092,3,0.542,4,0.542,5,0.374,6,2.829,7,0.735,8,1.759,9,1.924,10,4.079,11,1.586,12,0.048,13,0.962,14,3.493,15,1.4,16,3.005,17,0.682,18,0.735,19,2.18,20,2.829,21,0.542,22,0.092,23,1.803,24,1.803,25,1.4,26,3.493,27,0.038,28,0.038]],["title/modules/AppModule.html",[29,0.871,30,1.646]],["body/modules/AppModule.html",[1,2.616,2,1.23,3,0.458,4,0.458,5,0.316,12,0.048,17,0.786,18,0.62,19,2.298,20,2.387,21,0.458,22,0.078,27,0.034,28,0.034,29,1.23,30,3.222,31,1.181,32,1.576,33,2.387,34,2.387,35,2.387,36,2.612,37,2.298,38,2.612,39,2.03,40,1.522,41,1.522,42,2.948,43,2.03,44,2.324,45,2.948,46,2.948,47,2.948,48,2.948]],["title/injectables/AppService.html",[19,1.264,49,0.871]],["body/injectables/AppService.html",[3,0.536,4,0.536,5,0.37,7,0.726,8,1.745,9,1.913,10,4.061,12,0.048,13,1.2,15,1.382,16,2.982,17,0.536,18,0.726,19,1.978,21,0.536,22,0.091,25,1.382,27,0.037,28,0.037,49,1.362,50,1.781,51,2.793,52,2.821,53,3.45,54,3.45,55,1.566,56,2.361,57,1.781,58,3.45,59,2.793,60,2.793,61,3.45,62,3.45]],["title/controllers/BalancesController.html",[0,1.116,63,1.646]],["body/controllers/BalancesController.html",[0,1.225,2,0.956,3,0.474,4,0.474,5,0.327,7,0.643,8,1.614,9,1.806,11,1.387,12,0.048,13,0.842,15,1.225,17,0.625,18,0.643,21,0.474,22,0.08,23,1.578,24,1.578,25,1.225,27,0.034,28,0.034,55,2.046,56,2.092,57,1.578,63,2.38,64,2.475,65,2.475,66,2.092,67,4.028,68,3.056,69,2.046,70,4.028,71,3.056,72,1.578,73,1.225,74,0.956,75,1.578,76,3.085,77,1.578,78,2.475,79,2.046,80,3.056,81,3.056,82,2.092,83,3.056,84,2.092,85,3.056,86,3.056,87,3.085,88,3.056,89,3.056,90,3.262,91,3.056]],["title/modules/BalancesModule.html",[29,0.871,36,1.437]],["body/modules/BalancesModule.html",[2,1.32,3,0.51,4,0.51,5,0.352,12,0.048,17,0.791,18,0.692,21,0.51,22,0.086,27,0.036,28,0.036,29,1.32,31,1.317,32,1.692,36,2.692,39,2.18,40,1.696,41,1.696,43,2.18,44,1.942,63,2.758,79,2.367,92,2.661,93,2.661,94,3.286,95,2.661,96,1.696,97,3.286,98,3.286,99,3.286,100,2.661,101,3.286]],["title/injectables/BalancesService.html",[49,0.871,79,1.264]],["body/injectables/BalancesService.html",[3,0.248,4,0.248,5,0.171,7,0.336,8,1.008,9,1.633,12,0.049,13,1.057,15,1.414,16,1.722,17,0.548,18,0.336,21,0.248,22,0.042,23,0.825,24,0.825,25,1.414,27,0.022,28,0.022,49,0.786,50,0.825,52,0.944,55,1.936,56,2.129,57,0.825,66,1.094,69,1.742,72,1.981,73,1.633,74,1.2,75,1.981,76,2.627,77,1.298,79,1.142,82,1.094,84,1.094,87,2.415,96,0.825,102,1.294,103,2.515,104,2.515,105,2.515,106,2.515,107,1.294,108,3.3,109,1.598,110,2.515,111,1.598,112,1.838,113,3.111,114,4.418,115,2.515,116,2.519,117,1.598,118,1.598,119,1.598,120,2.515,121,1.598,122,1.294,123,2.037,124,1.294,125,1.094,126,1.094,127,1.598,128,2.515,129,2.515,130,1.598,131,1.598,132,2.515,133,3.528,134,1.598,135,1.598,136,2.857,137,1.598,138,2.515,139,2.515,140,1.598,141,1.294,142,1.598,143,1.598,144,1.598,145,1.094,146,1.598,147,1.294,148,1.598,149,1.598,150,1.598,151,1.598,152,1.598,153,1.598,154,2.515,155,1.598,156,1.294,157,1.294,158,1.598,159,1.294,160,1.598,161,1.598,162,3.111,163,3.111,164,2.129,165,1.598,166,3.111,167,1.598,168,3.111,169,3.528,170,1.294,171,1.598,172,1.598,173,1.294,174,1.598,175,1.598,176,1.294,177,2.515,178,1.598,179,1.294,180,1.598,181,1.598,182,1.294,183,1.294,184,1.294,185,1.294,186,1.294,187,1.294,188,1.294,189,1.294,190,1.294,191,1.094,192,0.944,193,1.294,194,1.294,195,1.598,196,1.598,197,1.598,198,1.094]],["title/classes/CreateTokenDto.html",[22,0.073,199,1.646]],["body/classes/CreateTokenDto.html",[3,0.545,4,0.545,5,0.376,7,0.738,11,1.593,12,0.046,13,0.966,17,0.545,21,0.545,22,0.116,27,0.038,28,0.038,74,1.097,199,2.601,200,2.073,201,2.841,202,1.999,203,3.293,204,2.401,205,2.401,206,2.401,207,2.601,208,2.841,209,2.841,210,2.841,211,3.565,212,3.565,213,2.601,214,2.601,215,3.508,216,2.841,217,2.401,218,2.073,219,2.401,220,2.841,221,3.508]],["title/injectables/DbService.html",[49,0.871,222,1.116]],["body/injectables/DbService.html",[3,0.202,4,0.202,5,0.14,7,0.275,8,0.856,9,1.916,12,0.049,13,1.082,15,1.388,17,0.421,18,0.275,21,0.202,22,0.034,25,1.49,27,0.018,28,0.018,49,0.668,50,0.673,52,1.604,55,2.031,69,2.262,72,1.788,73,1.75,74,1.399,75,1.788,77,1.788,112,2.58,126,0.893,141,2.541,145,0.893,164,1.858,176,1.73,191,2.148,192,2.198,198,2.148,202,0.97,204,2.905,222,0.856,223,1.056,224,3.138,225,2.541,226,1.462,227,1.462,228,1.73,229,2.137,230,2.137,231,2.137,232,2.137,233,1.304,234,2.137,235,1.304,236,3.319,237,2.137,238,1.304,239,2.137,240,1.304,241,2.137,242,1.304,243,1.304,244,2.137,245,2.198,246,1.304,247,1.304,248,1.304,249,2.137,250,1.304,251,0.893,252,1.304,253,1.304,254,1.304,255,1.304,256,1.304,257,3.72,258,3.138,259,2.541,260,1.304,261,1.304,262,1.304,263,1.854,264,3.138,265,1.304,266,3.72,267,3.72,268,2.137,269,2.714,270,3.72,271,3.138,272,3.138,273,3.138,274,3.138,275,2.714,276,1.304,277,2.714,278,1.304,279,2.714,280,3.138,281,1.304,282,2.137,283,2.137,284,1.304,285,1.462,286,2.137,287,1.304,288,2.137,289,1.304,290,1.304,291,2.137,292,1.304,293,1.304,294,1.304,295,1.304]],["title/classes/DeleteTokenDto.html",[22,0.073,296,1.646]],["body/classes/DeleteTokenDto.html",[3,0.545,4,0.545,5,0.376,7,0.738,11,1.593,12,0.046,13,0.966,17,0.545,21,0.545,22,0.116,27,0.038,28,0.038,74,1.097,200,2.073,202,1.999,203,2.401,204,2.401,205,2.401,206,2.401,207,2.601,208,2.841,209,2.841,210,2.841,211,3.565,212,3.565,213,2.601,214,2.601,216,2.841,217,2.401,218,2.073,219,2.401,220,2.841,296,2.601,297,2.841,298,3.565,299,3.508,300,3.508]],["title/modules/SharedModule.html",[29,0.871,37,1.264]],["body/modules/SharedModule.html",[2,1.044,3,0.518,4,0.518,5,0.358,12,0.048,17,0.662,18,0.703,21,0.518,22,0.088,27,0.037,28,0.037,29,1.334,31,1.338,32,1.71,37,2.417,39,2.202,40,1.723,41,1.723,43,2.202,44,1.973,222,2.225,301,2.704,302,2.704,303,2.704,304,3.339,305,4.266,306,3.339,307,3.339]],["title/controllers/WatchlistController.html",[0,1.116,308,1.646]],["body/controllers/WatchlistController.html",[0,0.594,2,0.464,3,0.23,4,0.23,5,0.159,7,0.312,8,0.95,9,2.073,11,1.881,12,0.048,13,1.141,15,1.66,17,0.668,18,0.312,21,0.23,22,0.039,23,0.766,24,1.224,25,1.66,27,0.02,28,0.02,55,2.015,57,2.291,65,1.201,69,2.148,72,1.91,73,1.66,74,1.157,75,1.91,77,2.139,78,1.201,112,2.689,164,2.317,199,2,213,0.877,214,0.877,222,0.594,225,1.201,226,1.015,227,2.028,228,1.92,259,3.196,263,2.187,285,2.701,296,2,308,1.401,309,1.201,310,2.372,311,1.92,312,2.372,313,3.385,314,2.741,315,2.372,316,1.483,317,3.832,318,1.483,319,4.143,320,1.483,321,3.946,322,1.483,323,2,324,1.483,325,1.483,326,1.483,327,1.483,328,1.483,329,1.483,330,2.372,331,1.483,332,2.372,333,1.483,334,2.372,335,1.483,336,1.483,337,2.372,338,1.483,339,1.483,340,1.483,341,1.483,342,1.483,343,1.483,344,1.483,345,1.015,346,1.483,347,1.483,348,1.483,349,1.077,350,1.483,351,1.483,352,1.483,353,1.483,354,1.483,355,1.201,356,1.201,357,1.201,358,1.483,359,1.483,360,1.201,361,1.483,362,2.963,363,2.963,364,2.963,365,1.483,366,1.483,367,1.201,368,1.483,369,1.483,370,2.372,371,1.483,372,1.483,373,1.201,374,1.483,375,1.483,376,1.483,377,1.483,378,1.201,379,1.483,380,1.483,381,1.201,382,1.483,383,1.483]],["title/modules/WatchlistModule.html",[29,0.871,38,1.437]],["body/modules/WatchlistModule.html",[2,1.294,3,0.494,4,0.494,5,0.341,12,0.048,17,0.783,18,0.67,21,0.494,22,0.084,27,0.035,28,0.035,29,1.294,31,1.276,32,1.658,37,2.291,38,2.755,39,2.136,40,1.644,41,1.644,43,2.136,44,2.446,95,2.579,96,1.644,308,2.717,345,2.18,349,2.348,384,2.579,385,2.579,386,3.185,387,3.185,388,3.185,389,3.185,390,3.185]],["title/injectables/WatchlistService.html",[49,0.871,349,1.264]],["body/injectables/WatchlistService.html",[3,0.351,4,0.351,5,0.242,7,0.475,8,1.309,9,2.007,12,0.049,13,1.159,15,1.539,17,0.653,18,0.475,21,0.351,22,0.059,23,1.166,24,1.687,25,1.686,27,0.028,28,0.028,49,1.022,50,1.166,52,1.334,55,2.027,57,1.982,69,1.743,72,1.982,73,1.686,74,1.201,75,1.982,77,1.982,96,1.166,107,1.829,108,3.616,112,2.486,122,1.829,123,2.646,124,1.829,125,1.546,126,1.546,179,1.829,182,1.829,183,1.829,184,1.829,185,1.829,186,1.829,187,1.829,188,1.829,189,1.829,190,1.829,191,1.546,192,1.334,193,1.829,194,1.829,222,1.789,263,1.334,311,2.646,314,3.407,345,1.546,349,1.483,355,1.829,391,1.829,392,3.267,393,2.258,394,3.267,395,2.258,396,2.258,397,3.267,398,2.258,399,2.258,400,1.829,401,2.258,402,2.258,403,2.258,404,3.267,405,2.258,406,2.258,407,2.258,408,2.258]],["title/coverage.html",[409,3.065]],["body/coverage.html",[0,1.832,1,1.861,5,0.337,6,2.55,12,0.047,19,1.43,22,0.12,27,0.035,28,0.035,49,1.515,51,2.55,63,1.861,64,2.55,74,0.985,79,1.43,102,2.55,192,1.861,198,3.746,199,1.861,201,2.55,222,1.262,223,2.55,296,1.861,297,2.55,308,1.861,309,2.55,323,1.861,349,1.43,391,2.55,409,2.55,410,3.149,411,3.149,412,3.149,413,5.027,414,3.149,415,3.149,416,2.55,417,2.55,418,2.55,419,3.149,420,4.108,421,2.55,422,3.149,423,3.149,424,3.149]],["title/classes/createWatchlistDto.html",[22,0.073,323,1.646]],["body/classes/createWatchlistDto.html",[3,0.556,4,0.556,5,0.384,7,0.754,11,1.627,12,0.047,13,0.987,17,0.556,21,0.556,22,0.117,27,0.038,28,0.038,69,1.627,73,1.947,74,1.121,200,2.118,202,2.025,205,2.453,206,2.453,207,2.636,217,2.453,218,2.118,219,2.453,323,2.636,421,2.902,425,3.584,426,4.461,427,3.584,428,4.461,429,3.584,430,3.584,431,3.584]],["title/dependencies.html",[32,1.34,432,1.889]],["body/dependencies.html",[12,0.048,18,0.732,22,0.115,27,0.037,28,0.037,32,1.394,96,1.796,100,2.817,125,2.381,218,2.056,245,2.817,251,2.381,433,3.479,434,3.479,435,3.479,436,4.379,437,3.479,438,4.792,439,3.479,440,3.479,441,3.479,442,4.379,443,3.479,444,3.479,445,3.479,446,2.817,447,3.479,448,3.479,449,3.479,450,3.479,451,3.479,452,3.479,453,3.479,454,3.479]],["title/miscellaneous/functions.html",[455,1.889,456,2.709]],["body/miscellaneous/functions.html",[7,0.889,12,0.042,27,0.042,28,0.042,416,3.418,418,4.222,455,3.418,456,3.418,457,4.221]],["title/index.html",[7,0.491,458,2.333,459,2.333]],["body/index.html",[2,0.491,5,0.168,12,0.048,22,0.041,27,0.021,28,0.021,29,0.491,43,0.811,59,3.276,60,3.082,66,1.075,73,1.812,76,1.698,82,1.698,84,1.698,87,1.075,90,3.276,116,1.272,136,1.272,145,1.698,147,1.272,156,1.272,157,2.83,159,1.272,170,1.272,173,1.272,203,1.698,207,1.466,213,0.928,214,1.466,226,1.698,227,1.698,236,1.272,251,1.075,263,2.503,285,2.9,298,1.272,317,3.749,356,1.272,357,2.009,360,1.272,367,1.272,373,1.272,378,1.272,381,1.272,400,1.272,417,1.272,446,1.272,460,1.57,461,3.495,462,1.57,463,2.481,464,3.495,465,1.57,466,1.57,467,3.076,468,1.57,469,1.57,470,1.57,471,1.57,472,1.57,473,1.57,474,1.57,475,1.57,476,2.481,477,1.57,478,1.57,479,1.57,480,3.076,481,3.076,482,1.57,483,1.57,484,2.481,485,1.57,486,3.076,487,1.57,488,1.57,489,1.57,490,1.57,491,1.57,492,1.57,493,2.481,494,1.57,495,1.57,496,1.57,497,3.495,498,1.57,499,1.57,500,1.57,501,2.481,502,1.57,503,1.57,504,1.57,505,3.495,506,1.57,507,1.57,508,1.57,509,1.57,510,1.57,511,2.481,512,1.57,513,3.076,514,1.57,515,1.57,516,3.806,517,1.57,518,2.481,519,3.076,520,2.481,521,2.481,522,1.57,523,4.521,524,3.495,525,2.481,526,1.57,527,1.57,528,1.57,529,2.481,530,1.57,531,1.57,532,1.57,533,1.57,534,2.481,535,1.57,536,3.495,537,2.481,538,1.57,539,1.57,540,1.57,541,1.57,542,1.57,543,1.57,544,1.57,545,2.481,546,1.57,547,1.57,548,1.57,549,1.57,550,1.57,551,1.57,552,3.806,553,3.495,554,3.495,555,3.495,556,3.495,557,3.495,558,1.57,559,1.57,560,1.57,561,1.57,562,1.57,563,1.57,564,1.57,565,1.57,566,1.57,567,1.57,568,1.57,569,1.272,570,1.57,571,1.57,572,1.57]],["title/modules.html",[31,1.517]],["body/modules.html",[12,0.041,27,0.041,28,0.041,30,2.34,31,1.587,36,2.044,37,1.798,38,2.044,573,5.261,574,5.261,575,5.261,576,5.261]],["title/overview.html",[577,3.065]],["body/overview.html",[2,0.97,12,0.047,19,2.061,27,0.035,28,0.035,30,3.202,31,1.243,32,1.63,33,2.512,34,2.512,35,2.512,36,2.582,37,2.375,38,2.701,39,2.1,40,1.601,41,1.601,50,1.601,79,2.061,92,2.512,93,2.512,200,1.833,222,2.097,301,2.512,302,2.512,303,2.512,349,2.061,384,2.512,385,2.512,577,2.512,578,4.068,579,4.068]],["title/properties.html",[202,1.519,432,1.889]],["body/properties.html",[12,0.047,27,0.041,28,0.041,202,1.842,569,3.285,580,4.056,581,4.056,582,4.056,583,4.056,584,4.056,585,4.81,586,4.056,587,4.056]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":198,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"coverage.html":{}}}],["0.0",{"_index":128,"title":{},"body":{"injectables/BalancesService.html":{}}}],["0.0.1",{"_index":581,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0x52114fb7396dbe19096ffa343d18830f5d77b6c6",{"_index":525,"title":{},"body":{"index.html":{}}}],["1",{"_index":82,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"index.html":{}}}],["1,137,250",{"_index":88,"title":{},"body":{"controllers/BalancesController.html":{}}}],["1.0.1",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["137",{"_index":170,"title":{},"body":{"injectables/BalancesService.html":{},"index.html":{}}}],["2",{"_index":531,"title":{},"body":{"index.html":{}}}],["2.1",{"_index":356,"title":{},"body":{"controllers/WatchlistController.html":{},"index.html":{}}}],["2.12.0",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":360,"title":{},"body":{"controllers/WatchlistController.html":{},"index.html":{}}}],["2.2.0",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["2.3",{"_index":367,"title":{},"body":{"controllers/WatchlistController.html":{},"index.html":{}}}],["2.4",{"_index":373,"title":{},"body":{"controllers/WatchlistController.html":{},"index.html":{}}}],["2.5",{"_index":378,"title":{},"body":{"controllers/WatchlistController.html":{},"index.html":{}}}],["2.6",{"_index":381,"title":{},"body":{"controllers/WatchlistController.html":{},"index.html":{}}}],["2.9.0",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":426,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["20sample",{"_index":551,"title":{},"body":{"index.html":{}}}],["24cf68e1",{"_index":553,"title":{},"body":{"index.html":{}}}],["250",{"_index":173,"title":{},"body":{"injectables/BalancesService.html":{},"index.html":{}}}],["3",{"_index":579,"title":{},"body":{"overview.html":{}}}],["3ef1",{"_index":554,"title":{},"body":{"index.html":{}}}],["4",{"_index":578,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["403b",{"_index":555,"title":{},"body":{"index.html":{}}}],["44a90cb32816",{"_index":557,"title":{},"body":{"index.html":{}}}],["5",{"_index":548,"title":{},"body":{"index.html":{}}}],["6.2.13",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["9851",{"_index":556,"title":{},"body":{"index.html":{}}}],["_id",{"_index":257,"title":{},"body":{"injectables/DbService.html":{}}}],["accept",{"_index":184,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["add",{"_index":214,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"index.html":{}}}],["added",{"_index":284,"title":{},"body":{"injectables/DbService.html":{}}}],["address",{"_index":76,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"index.html":{}}}],["addtokendto",{"_index":351,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["addtokens",{"_index":310,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["addtokens(@body",{"_index":369,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["addtokens(payload",{"_index":316,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["aggregate",{"_index":517,"title":{},"body":{"index.html":{}}}],["aggregated",{"_index":83,"title":{},"body":{"controllers/BalancesController.html":{}}}],["alphanumeric",{"_index":546,"title":{},"body":{"index.html":{}}}],["alternative",{"_index":494,"title":{},"body":{"index.html":{}}}],["api",{"_index":505,"title":{},"body":{"index.html":{}}}],["apis",{"_index":542,"title":{},"body":{"index.html":{}}}],["app",{"_index":472,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":508,"title":{},"body":{"index.html":{}}}],["architecture",{"_index":498,"title":{},"body":{"index.html":{}}}],["array",{"_index":204,"title":{},"body":{"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{}}}],["arrayminsize",{"_index":216,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["arrayminsize(1,{message:'please",{"_index":220,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["author",{"_index":586,"title":{},"body":{"properties.html":{}}}],["await",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["backend",{"_index":484,"title":{},"body":{"index.html":{}}}],["balance",{"_index":66,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"index.html":{}}}],["balance:balance",{"_index":151,"title":{},"body":{"injectables/BalancesService.html":{}}}],["balanceinusd",{"_index":136,"title":{},"body":{"injectables/BalancesService.html":{},"index.html":{}}}],["balanceinusd:\"$\"+balanceinusd",{"_index":152,"title":{},"body":{"injectables/BalancesService.html":{}}}],["balances",{"_index":84,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"index.html":{}}}],["balances/balances.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["balancescontroller",{"_index":63,"title":{"controllers/BalancesController.html":{}},"body":{"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"coverage.html":{}}}],["balancesmodule",{"_index":36,"title":{"modules/BalancesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules.html":{},"overview.html":{}}}],["balancesservice",{"_index":79,"title":{"injectables/BalancesService.html":{}},"body":{"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":489,"title":{},"body":{"index.html":{}}}],["body",{"_index":339,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["bootstrap",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":169,"title":{},"body":{"injectables/BalancesService.html":{}}}],["browse",{"_index":576,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":573,"title":{},"body":{"modules.html":{}}}],["c.id",{"_index":407,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["case",{"_index":162,"title":{},"body":{"injectables/BalancesService.html":{}}}],["catcherror",{"_index":122,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["catcherror((error",{"_index":190,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["chain",{"_index":116,"title":{},"body":{"injectables/BalancesService.html":{},"index.html":{}}}],["chainlist",{"_index":402,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["chainlist.some((c:any",{"_index":406,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["chains",{"_index":87,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"index.html":{}}}],["chains.foreach((chain",{"_index":160,"title":{},"body":{"injectables/BalancesService.html":{}}}],["chains:number",{"_index":154,"title":{},"body":{"injectables/BalancesService.html":{}}}],["characters",{"_index":549,"title":{},"body":{"index.html":{}}}],["class",{"_index":22,"title":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":200,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_balancesmodule",{"_index":92,"title":{},"body":{"modules/BalancesModule.html":{},"overview.html":{}}}],["cluster_balancesmodule_providers",{"_index":93,"title":{},"body":{"modules/BalancesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":301,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":303,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":302,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_watchlistmodule",{"_index":384,"title":{},"body":{"modules/WatchlistModule.html":{},"overview.html":{}}}],["cluster_watchlistmodule_imports",{"_index":386,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["cluster_watchlistmodule_providers",{"_index":385,"title":{},"body":{"modules/WatchlistModule.html":{},"overview.html":{}}}],["codes",{"_index":502,"title":{},"body":{"index.html":{}}}],["coin",{"_index":535,"title":{},"body":{"index.html":{}}}],["coingecko",{"_index":537,"title":{},"body":{"index.html":{}}}],["coinlist",{"_index":248,"title":{},"body":{"injectables/DbService.html":{}}}],["coins",{"_index":357,"title":{},"body":{"controllers/WatchlistController.html":{},"index.html":{}}}],["configmodule",{"_index":99,"title":{},"body":{"modules/BalancesModule.html":{}}}],["configmodule.forroot(),httpmodule",{"_index":101,"title":{},"body":{"modules/BalancesModule.html":{}}}],["consider",{"_index":504,"title":{},"body":{"index.html":{}}}],["console.log(balanceinusd",{"_index":140,"title":{},"body":{"injectables/BalancesService.html":{}}}],["console.log(reqwlist",{"_index":288,"title":{},"body":{"injectables/DbService.html":{}}}],["const",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(httpservice",{"_index":107,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["contract_address",{"_index":134,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contract_decimals",{"_index":133,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contract_name",{"_index":132,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contract_ticker_symbol",{"_index":146,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contractaddress",{"_index":526,"title":{},"body":{"index.html":{}}}],["contractaddress:contract_address",{"_index":148,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contractdecimals:contract_decimals",{"_index":149,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contractdeicmals",{"_index":527,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BalancesController.html":{},"controllers/WatchlistController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BalancesController.html":{},"controllers/WatchlistController.html":{},"coverage.html":{}}}],["controller('balance",{"_index":81,"title":{},"body":{"controllers/BalancesController.html":{}}}],["controller('watchlist",{"_index":353,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["controller/balances/balances.controller",{"_index":97,"title":{},"body":{"modules/BalancesModule.html":{}}}],["controller/watchlist/watchlist.controller",{"_index":388,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"index.html":{},"overview.html":{}}}],["covalent_api_key",{"_index":470,"title":{},"body":{"index.html":{}}}],["covalenthq",{"_index":521,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":409,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":226,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"index.html":{}}}],["create(name",{"_index":232,"title":{},"body":{"injectables/DbService.html":{}}}],["created",{"_index":278,"title":{},"body":{"injectables/DbService.html":{}}}],["createtokendto",{"_index":199,"title":{"classes/CreateTokenDto.html":{}},"body":{"classes/CreateTokenDto.html":{},"controllers/WatchlistController.html":{},"coverage.html":{}}}],["createwatchlist",{"_index":311,"title":{},"body":{"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["createwatchlist(@body",{"_index":365,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["createwatchlist(name",{"_index":394,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["createwatchlist(payload",{"_index":322,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["createwatchlistdto",{"_index":323,"title":{"classes/createWatchlistDto.html":{}},"body":{"controllers/WatchlistController.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{}}}],["customer",{"_index":262,"title":{},"body":{"injectables/DbService.html":{}}}],["cypherd",{"_index":483,"title":{},"body":{"index.html":{}}}],["data",{"_index":112,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["data.address",{"_index":155,"title":{},"body":{"injectables/BalancesService.html":{}}}],["data.foreach((item",{"_index":130,"title":{},"body":{"injectables/BalancesService.html":{}}}],["data.includes(item",{"_index":290,"title":{},"body":{"injectables/DbService.html":{}}}],["data.items",{"_index":195,"title":{},"body":{"injectables/BalancesService.html":{}}}],["data:data",{"_index":286,"title":{},"body":{"injectables/DbService.html":{}}}],["data:reqwlist",{"_index":295,"title":{},"body":{"injectables/DbService.html":{}}}],["data:res",{"_index":268,"title":{},"body":{"injectables/DbService.html":{}}}],["database",{"_index":495,"title":{},"body":{"index.html":{}}}],["databases",{"_index":254,"title":{},"body":{"injectables/DbService.html":{}}}],["db",{"_index":446,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["db.service",{"_index":306,"title":{},"body":{"modules/SharedModule.html":{}}}],["dblocal",{"_index":249,"title":{},"body":{"injectables/DbService.html":{}}}],["dbservice",{"_index":222,"title":{"injectables/DbService.html":{}},"body":{"injectables/DbService.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"overview.html":{}}}],["dbservice:dbservice",{"_index":355,"title":{},"body":{"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["decimals",{"_index":147,"title":{},"body":{"injectables/BalancesService.html":{},"index.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/BalancesController.html":{},"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"classes/createWatchlistDto.html":{}}}],["default",{"_index":176,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["delete",{"_index":227,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"index.html":{}}}],["delete('/delete/:name",{"_index":330,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["delete(key",{"_index":234,"title":{},"body":{"injectables/DbService.html":{}}}],["deleted",{"_index":291,"title":{},"body":{"injectables/DbService.html":{}}}],["deletetokendto",{"_index":296,"title":{"classes/DeleteTokenDto.html":{}},"body":{"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"coverage.html":{}}}],["deletetokens",{"_index":312,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["deletetokens(@body",{"_index":375,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["deletetokens(payload",{"_index":326,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["deletewatchlist",{"_index":228,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["deletewatchlist(@param('name",{"_index":382,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["deletewatchlist(key",{"_index":237,"title":{},"body":{"injectables/DbService.html":{}}}],["deletewatchlist(name",{"_index":329,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":582,"title":{},"body":{"properties.html":{}}}],["development",{"_index":473,"title":{},"body":{"index.html":{}}}],["docs",{"_index":568,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["dprecated",{"_index":246,"title":{},"body":{"injectables/DbService.html":{}}}],["duplicates",{"_index":560,"title":{},"body":{"index.html":{}}}],["element.remove",{"_index":293,"title":{},"body":{"injectables/DbService.html":{}}}],["element.tokens.filter((item",{"_index":289,"title":{},"body":{"injectables/DbService.html":{}}}],["element.update",{"_index":282,"title":{},"body":{"injectables/DbService.html":{}}}],["encoding",{"_index":185,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["endpoint",{"_index":516,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":506,"title":{},"body":{"index.html":{}}}],["env",{"_index":469,"title":{},"body":{"index.html":{}}}],["environment",{"_index":468,"title":{},"body":{"index.html":{}}}],["error.response.status",{"_index":194,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["eth",{"_index":156,"title":{},"body":{"injectables/BalancesService.html":{},"index.html":{}}}],["ethereum",{"_index":518,"title":{},"body":{"index.html":{}}}],["evm",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["exports",{"_index":305,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["fantom",{"_index":519,"title":{},"body":{"index.html":{}}}],["feature",{"_index":533,"title":{},"body":{"index.html":{}}}],["field",{"_index":207,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"index.html":{}}}],["finance",{"_index":562,"title":{},"body":{"index.html":{}}}],["find",{"_index":229,"title":{},"body":{"injectables/DbService.html":{}}}],["find(key",{"_index":239,"title":{},"body":{"injectables/DbService.html":{}}}],["firstvaluefrom",{"_index":123,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["follow",{"_index":507,"title":{},"body":{"index.html":{}}}],["following",{"_index":467,"title":{},"body":{"index.html":{}}}],["formatdata",{"_index":103,"title":{},"body":{"injectables/BalancesService.html":{}}}],["formatdata(data",{"_index":110,"title":{},"body":{"injectables/BalancesService.html":{}}}],["formula",{"_index":143,"title":{},"body":{"injectables/BalancesService.html":{}}}],["found",{"_index":266,"title":{},"body":{"injectables/DbService.html":{}}}],["framework",{"_index":491,"title":{},"body":{"index.html":{}}}],["function",{"_index":417,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["functions",{"_index":456,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":539,"title":{},"body":{"index.html":{}}}],["generation",{"_index":566,"title":{},"body":{"index.html":{}}}],["get('/:address",{"_index":70,"title":{},"body":{"controllers/BalancesController.html":{}}}],["get('/coinlist",{"_index":334,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["get('/get/:id",{"_index":337,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["get('/getall",{"_index":332,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["getaggregatedbalances",{"_index":67,"title":{},"body":{"controllers/BalancesController.html":{}}}],["getaggregatedbalances(@param('address",{"_index":86,"title":{},"body":{"controllers/BalancesController.html":{}}}],["getaggregatedbalances(address",{"_index":68,"title":{},"body":{"controllers/BalancesController.html":{}}}],["getaggrgate",{"_index":104,"title":{},"body":{"injectables/BalancesService.html":{}}}],["getaggrgate(address",{"_index":115,"title":{},"body":{"injectables/BalancesService.html":{}}}],["getallwatchlists",{"_index":313,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["getcoinlist",{"_index":314,"title":{},"body":{"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["getdata",{"_index":105,"title":{},"body":{"injectables/BalancesService.html":{}}}],["getdata(address",{"_index":118,"title":{},"body":{"injectables/BalancesService.html":{}}}],["getdata(address:string",{"_index":196,"title":{},"body":{"injectables/BalancesService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":458,"title":{"index.html":{}},"body":{}}],["getwatchlist",{"_index":315,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["getwatchlist(@param('id",{"_index":379,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["getwatchlist(id",{"_index":336,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["given",{"_index":85,"title":{},"body":{"controllers/BalancesController.html":{}}}],["gravity",{"_index":561,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":510,"title":{},"body":{"index.html":{}}}],["gzip,deflate,compress",{"_index":186,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["headers",{"_index":183,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["hello",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["http",{"_index":499,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":126,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{}}}],["httpexception(\"watchlist",{"_index":273,"title":{},"body":{"injectables/DbService.html":{}}}],["httpexception(error.response.data",{"_index":193,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["httpmodule",{"_index":95,"title":{},"body":{"modules/BalancesModule.html":{},"modules/WatchlistModule.html":{}}}],["https://api.coingecko.com/api/v3/coins/list",{"_index":400,"title":{},"body":{"injectables/WatchlistService.html":{},"index.html":{}}}],["https://api.covalenthq.com/v1/${chain}/address/${address",{"_index":180,"title":{},"body":{"injectables/BalancesService.html":{}}}],["https://api.covalenthq.com/v1/1/address/0x52114fb7396dbe19096ffa343d18830f5d77b6c6/balances_v2/?key",{"_index":522,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/modules",{"_index":307,"title":{},"body":{"modules/SharedModule.html":{}}}],["https://www.codecademy.com/article/what",{"_index":511,"title":{},"body":{"index.html":{}}}],["https://www.coingecko.com/en/api/documentation",{"_index":564,"title":{},"body":{"index.html":{}}}],["https://www.covalenthq.com/docs/api",{"_index":567,"title":{},"body":{"index.html":{}}}],["https://www.covalenthq.com/platform/#/auth/register",{"_index":565,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":108,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["httpservice,private",{"_index":399,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["httpstatus",{"_index":243,"title":{},"body":{"injectables/DbService.html":{}}}],["httpstatus.not_found",{"_index":274,"title":{},"body":{"injectables/DbService.html":{}}}],["id",{"_index":317,"title":{},"body":{"controllers/WatchlistController.html":{},"index.html":{}}}],["identifier",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":559,"title":{},"body":{"index.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["injectable",{"_index":49,"title":{"injectables/AppService.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{},"overview.html":{}}}],["input",{"_index":524,"title":{},"body":{"index.html":{}}}],["installation",{"_index":460,"title":{},"body":{"index.html":{}}}],["installenvironment",{"_index":462,"title":{},"body":{"index.html":{}}}],["integrate",{"_index":520,"title":{},"body":{"index.html":{}}}],["integration",{"_index":538,"title":{},"body":{"index.html":{}}}],["isalphanumeric",{"_index":428,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["isnan(balanceinusd",{"_index":142,"title":{},"body":{"injectables/BalancesService.html":{}}}],["isnotempty",{"_index":217,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["isnotempty({message",{"_index":205,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["isnotempty({message:'missing",{"_index":219,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["item",{"_index":135,"title":{},"body":{"injectables/BalancesService.html":{}}}],["items",{"_index":197,"title":{},"body":{"injectables/BalancesService.html":{}}}],["jmarc@cypherd.io",{"_index":587,"title":{},"body":{"properties.html":{}}}],["json",{"_index":496,"title":{},"body":{"index.html":{}}}],["key",{"_index":236,"title":{},"body":{"injectables/DbService.html":{},"index.html":{}}}],["length",{"_index":429,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["length(5",{"_index":430,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["license",{"_index":569,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":572,"title":{},"body":{"index.html":{}}}],["link",{"_index":482,"title":{},"body":{"index.html":{}}}],["list",{"_index":536,"title":{},"body":{"index.html":{}}}],["local",{"_index":251,"title":{},"body":{"injectables/DbService.html":{},"dependencies.html":{},"index.html":{}}}],["logo",{"_index":528,"title":{},"body":{"index.html":{}}}],["logo:logo_url",{"_index":150,"title":{},"body":{"injectables/BalancesService.html":{}}}],["logo_url,contract_ticker_symbol",{"_index":131,"title":{},"body":{"injectables/BalancesService.html":{}}}],["management",{"_index":532,"title":{},"body":{"index.html":{}}}],["map",{"_index":124,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["map((v:any",{"_index":188,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["mapping.decorator",{"_index":344,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["master",{"_index":534,"title":{},"body":{"index.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.pow(10",{"_index":139,"title":{},"body":{"injectables/BalancesService.html":{}}}],["matic",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["maximum",{"_index":550,"title":{},"body":{"index.html":{}}}],["meaningful",{"_index":514,"title":{},"body":{"index.html":{}}}],["message",{"_index":209,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["message:\"all",{"_index":265,"title":{},"body":{"injectables/DbService.html":{}}}],["message:\"tokens",{"_index":283,"title":{},"body":{"injectables/DbService.html":{}}}],["message:\"watchlist",{"_index":275,"title":{},"body":{"injectables/DbService.html":{}}}],["metadata",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["minimum",{"_index":547,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":455,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["missing",{"_index":206,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["mit",{"_index":571,"title":{},"body":{"index.html":{}}}],["mode",{"_index":476,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"index.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"modules.html":{},"overview.html":{}}}],["moralis",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["moralisweb3/common",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["mvc",{"_index":490,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{},"index.html":{}}}],["name'})@isalphanumeric()@length(5",{"_index":425,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["name:string",{"_index":431,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["names",{"_index":513,"title":{},"body":{"index.html":{}}}],["need",{"_index":466,"title":{},"body":{"index.html":{}}}],["nest",{"_index":570,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":487,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":96,"title":{},"body":{"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators/http/request",{"_index":343,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["nestjs/common/exceptions",{"_index":127,"title":{},"body":{"injectables/BalancesService.html":{}}}],["nestjs/config",{"_index":100,"title":{},"body":{"modules/BalancesModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["network",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["new",{"_index":192,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["npm",{"_index":461,"title":{},"body":{"index.html":{}}}],["number",{"_index":114,"title":{},"body":{"injectables/BalancesService.html":{}}}],["object",{"_index":585,"title":{},"body":{"properties.html":{}}}],["one",{"_index":212,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["optional",{"_index":75,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["out",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"overview.html":{}}}],["output",{"_index":90,"title":{},"body":{"controllers/BalancesController.html":{},"index.html":{}}}],["outputdata",{"_index":106,"title":{},"body":{"injectables/BalancesService.html":{}}}],["outputdata(data",{"_index":120,"title":{},"body":{"injectables/BalancesService.html":{}}}],["overview",{"_index":577,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":432,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":78,"title":{},"body":{"controllers/BalancesController.html":{},"controllers/WatchlistController.html":{}}}],["param('id",{"_index":370,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["parsefloat(balance",{"_index":138,"title":{},"body":{"injectables/BalancesService.html":{}}}],["parsefloat(quote_rate",{"_index":137,"title":{},"body":{"injectables/BalancesService.html":{}}}],["path",{"_index":253,"title":{},"body":{"injectables/DbService.html":{}}}],["patterns",{"_index":509,"title":{},"body":{"index.html":{}}}],["payload",{"_index":321,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["phantom",{"_index":158,"title":{},"body":{"injectables/BalancesService.html":{}}}],["pipe",{"_index":187,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["please",{"_index":210,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["points",{"_index":503,"title":{},"body":{"index.html":{}}}],["polygon",{"_index":157,"title":{},"body":{"injectables/BalancesService.html":{},"index.html":{}}}],["post",{"_index":341,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["post('/create",{"_index":361,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["post('/create')@usepipes(new",{"_index":324,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["prefix",{"_index":65,"title":{},"body":{"controllers/BalancesController.html":{},"controllers/WatchlistController.html":{}}}],["prerequisites",{"_index":485,"title":{},"body":{"index.html":{}}}],["private",{"_index":224,"title":{},"body":{"injectables/DbService.html":{}}}],["problem",{"_index":480,"title":{},"body":{"index.html":{}}}],["production",{"_index":478,"title":{},"body":{"index.html":{}}}],["project",{"_index":465,"title":{},"body":{"index.html":{}}}],["promise",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BalancesService.html":{}}}],["properties",{"_index":202,"title":{"properties.html":{}},"body":{"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{},"properties.html":{}}}],["provide",{"_index":211,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"index.html":{}}}],["put",{"_index":342,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["put('/addtokens/:id",{"_index":368,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["put('/addtokens/:id')@usepipes(new",{"_index":318,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["put('/deletetokens/:id",{"_index":374,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["put('/deletetokens/:id')@usepipes(new",{"_index":327,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["references",{"_index":563,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":584,"title":{},"body":{"properties.html":{}}}],["require('db",{"_index":250,"title":{},"body":{"injectables/DbService.html":{}}}],["required",{"_index":258,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist",{"_index":270,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist.delete",{"_index":294,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist.foreach((element",{"_index":279,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist.length",{"_index":272,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist:any",{"_index":269,"title":{},"body":{"injectables/DbService.html":{}}}],["res",{"_index":164,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["res.result",{"_index":168,"title":{},"body":{"injectables/BalancesService.html":{}}}],["reset",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"overview.html":{}}}],["response",{"_index":501,"title":{},"body":{"index.html":{}}}],["rest",{"_index":497,"title":{},"body":{"index.html":{}}}],["restful",{"_index":515,"title":{},"body":{"index.html":{}}}],["result",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{}}}],["result.balances.eth",{"_index":167,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.balances.phantom",{"_index":175,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.balances.polygon",{"_index":172,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.push",{"_index":144,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.totalbalanceinusd",{"_index":177,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.totalbalanceinusd+=res.totalbalance",{"_index":166,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result:any",{"_index":129,"title":{},"body":{"injectables/BalancesService.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["run",{"_index":464,"title":{},"body":{"index.html":{}}}],["running",{"_index":471,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":125,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["sample",{"_index":523,"title":{},"body":{"index.html":{}}}],["save",{"_index":277,"title":{},"body":{"injectables/DbService.html":{}}}],["schema",{"_index":252,"title":{},"body":{"injectables/DbService.html":{}}}],["schema('coinlist",{"_index":256,"title":{},"body":{"injectables/DbService.html":{}}}],["schema('watchlists",{"_index":261,"title":{},"body":{"injectables/DbService.html":{}}}],["services/balances/balances.service",{"_index":98,"title":{},"body":{"modules/BalancesModule.html":{}}}],["services/watchlist/watchlist.service",{"_index":389,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["set(element.tokens.concat(data",{"_index":281,"title":{},"body":{"injectables/DbService.html":{}}}],["shared",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":37,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule,httpmodule",{"_index":390,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["simple",{"_index":493,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["src/.../main.ts",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:4",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:6",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["src/balances/balances.module.ts",{"_index":94,"title":{},"body":{"modules/BalancesModule.html":{}}}],["src/balances/controller/balances/balances.controller.ts",{"_index":64,"title":{},"body":{"controllers/BalancesController.html":{},"coverage.html":{}}}],["src/balances/controller/balances/balances.controller.ts:10",{"_index":71,"title":{},"body":{"controllers/BalancesController.html":{}}}],["src/balances/services/balances/balances.service",{"_index":80,"title":{},"body":{"controllers/BalancesController.html":{}}}],["src/balances/services/balances/balances.service.ts",{"_index":102,"title":{},"body":{"injectables/BalancesService.html":{},"coverage.html":{}}}],["src/balances/services/balances/balances.service.ts:11",{"_index":111,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/balances/services/balances/balances.service.ts:38",{"_index":121,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/balances/services/balances/balances.service.ts:6",{"_index":109,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/balances/services/balances/balances.service.ts:76",{"_index":117,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/balances/services/balances/balances.service.ts:91",{"_index":119,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/main.ts",{"_index":416,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared",{"_index":345,"title":{},"body":{"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{}}}],["src/shared/db.service.ts",{"_index":223,"title":{},"body":{"injectables/DbService.html":{},"coverage.html":{}}}],["src/shared/db.service.ts:12",{"_index":231,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:33",{"_index":240,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:51",{"_index":233,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:64",{"_index":242,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:81",{"_index":235,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:98",{"_index":238,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/shared.module.ts",{"_index":304,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts",{"_index":309,"title":{},"body":{"controllers/WatchlistController.html":{},"coverage.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:15",{"_index":335,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:22",{"_index":333,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:33",{"_index":325,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:44",{"_index":320,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:56",{"_index":328,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:65",{"_index":338,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:72",{"_index":331,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/addtoken.dto",{"_index":352,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/createtoken.dto",{"_index":346,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/createtoken.dto.ts",{"_index":201,"title":{},"body":{"classes/CreateTokenDto.html":{},"coverage.html":{}}}],["src/watchlist/dtos/createtoken.dto.ts:6",{"_index":215,"title":{},"body":{"classes/CreateTokenDto.html":{}}}],["src/watchlist/dtos/createwatchlist.dto",{"_index":347,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/createwatchlist.dto.ts",{"_index":421,"title":{},"body":{"coverage.html":{},"classes/createWatchlistDto.html":{}}}],["src/watchlist/dtos/createwatchlist.dto.ts:7",{"_index":427,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["src/watchlist/dtos/deletetoken.dto",{"_index":348,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/deletetoken.dto.ts",{"_index":297,"title":{},"body":{"classes/DeleteTokenDto.html":{},"coverage.html":{}}}],["src/watchlist/dtos/deletetoken.dto.ts:6",{"_index":299,"title":{},"body":{"classes/DeleteTokenDto.html":{}}}],["src/watchlist/services/watchlist/watchlist.service",{"_index":350,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts",{"_index":391,"title":{},"body":{"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts:11",{"_index":396,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts:27",{"_index":395,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts:33",{"_index":398,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts:7",{"_index":393,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/watchlist/watchlist.module.ts",{"_index":387,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["start",{"_index":474,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":477,"title":{},"body":{"index.html":{}}}],["start:prodbackend",{"_index":479,"title":{},"body":{"index.html":{}}}],["started",{"_index":459,"title":{"index.html":{}},"body":{}}],["statement",{"_index":481,"title":{},"body":{"index.html":{}}}],["statements",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":69,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["string,chain:number",{"_index":178,"title":{},"body":{"injectables/BalancesService.html":{}}}],["string,data:array",{"_index":287,"title":{},"body":{"injectables/DbService.html":{}}}],["string}/balances_v2/?key=${process.env.covalent_api_key",{"_index":181,"title":{},"body":{"injectables/BalancesService.html":{}}}],["successfully",{"_index":267,"title":{},"body":{"injectables/DbService.html":{}}}],["support",{"_index":574,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":575,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":161,"title":{},"body":{"injectables/BalancesService.html":{}}}],["symbol",{"_index":145,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"index.html":{}}}],["table",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.balancesservice.getdata(address",{"_index":89,"title":{},"body":{"controllers/BalancesController.html":{}}}],["this.balancesservice.outputdata(result",{"_index":91,"title":{},"body":{"controllers/BalancesController.html":{}}}],["this.coinlist",{"_index":255,"title":{},"body":{"injectables/DbService.html":{}}}],["this.db.create('vitalikwatchlist",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["this.dbservice.create(name",{"_index":401,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["this.dbservice.create(payload.name",{"_index":366,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.delete(id",{"_index":377,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.deletewatchlist(name",{"_index":383,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.find('all",{"_index":359,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.find(id",{"_index":380,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.update(id",{"_index":372,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.formatdata(data.items[0",{"_index":165,"title":{},"body":{"injectables/BalancesService.html":{}}}],["this.formatdata(data.items[1",{"_index":171,"title":{},"body":{"injectables/BalancesService.html":{}}}],["this.formatdata(data.items[2",{"_index":174,"title":{},"body":{"injectables/BalancesService.html":{}}}],["this.getcoinlist",{"_index":403,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["this.httpservice.get(url",{"_index":182,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["this.watchlists",{"_index":260,"title":{},"body":{"injectables/DbService.html":{}}}],["this.watchlists.create",{"_index":276,"title":{},"body":{"injectables/DbService.html":{}}}],["this.watchlists.find",{"_index":264,"title":{},"body":{"injectables/DbService.html":{}}}],["this.watchlists.find({_id:key",{"_index":292,"title":{},"body":{"injectables/DbService.html":{}}}],["this.watchlistservice.getcoinlist",{"_index":358,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.watchlistservice.validatetokens(payload.tokenstobeadded",{"_index":371,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.watchlistservice.validatetokens(payload.tokenstobedeleted",{"_index":376,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["through",{"_index":544,"title":{},"body":{"index.html":{}}}],["throw",{"_index":191,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{}}}],["token",{"_index":213,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"index.html":{}}}],["tokens",{"_index":263,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["tokens.filter((v:any",{"_index":405,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["tokenstobeadded",{"_index":203,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"index.html":{}}}],["tokenstobeadded'})@arrayminsize(1",{"_index":208,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["tokenstobeadded:array",{"_index":221,"title":{},"body":{"classes/CreateTokenDto.html":{}}}],["tokenstobedeleted",{"_index":298,"title":{},"body":{"classes/DeleteTokenDto.html":{},"index.html":{}}}],["tokenstobedeleted:array",{"_index":300,"title":{},"body":{"classes/DeleteTokenDto.html":{}}}],["totalbalance",{"_index":113,"title":{},"body":{"injectables/BalancesService.html":{}}}],["totalbalance,result",{"_index":153,"title":{},"body":{"injectables/BalancesService.html":{}}}],["totalbalanceinusd",{"_index":159,"title":{},"body":{"injectables/BalancesService.html":{},"index.html":{}}}],["track",{"_index":543,"title":{},"body":{"index.html":{}}}],["transform",{"_index":363,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["transformer",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":259,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["type",{"_index":74,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{}}}],["typeof",{"_index":141,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{}}}],["typescript",{"_index":488,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":271,"title":{},"body":{"injectables/DbService.html":{}}}],["understand",{"_index":486,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["unlicensed",{"_index":583,"title":{},"body":{"properties.html":{}}}],["upcoming",{"_index":541,"title":{},"body":{"index.html":{}}}],["update",{"_index":230,"title":{},"body":{"injectables/DbService.html":{}}}],["update(key",{"_index":241,"title":{},"body":{"injectables/DbService.html":{}}}],["updatedtokens",{"_index":280,"title":{},"body":{"injectables/DbService.html":{}}}],["url",{"_index":179,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["used",{"_index":540,"title":{},"body":{"index.html":{}}}],["usepipes",{"_index":340,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["usepipes(new",{"_index":362,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["utils",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["uuid",{"_index":244,"title":{},"body":{"injectables/DbService.html":{}}}],["uuidv4",{"_index":245,"title":{},"body":{"injectables/DbService.html":{},"dependencies.html":{}}}],["v",{"_index":408,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["v.data",{"_index":189,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["v4",{"_index":247,"title":{},"body":{"injectables/DbService.html":{}}}],["validated",{"_index":558,"title":{},"body":{"index.html":{}}}],["validatetokens",{"_index":392,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["validatetokens(tokens",{"_index":397,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["validation",{"_index":545,"title":{},"body":{"index.html":{}}}],["validationpipe",{"_index":319,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["validations",{"_index":492,"title":{},"body":{"index.html":{}}}],["validator",{"_index":218,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{}}}],["values",{"_index":404,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["var",{"_index":163,"title":{},"body":{"injectables/BalancesService.html":{}}}],["variable",{"_index":512,"title":{},"body":{"index.html":{}}}],["variables",{"_index":463,"title":{},"body":{"index.html":{}}}],["verbs",{"_index":500,"title":{},"body":{"index.html":{}}}],["version",{"_index":580,"title":{},"body":{"properties.html":{}}}],["vitalikwatchlist",{"_index":552,"title":{},"body":{"index.html":{}}}],["watch",{"_index":475,"title":{},"body":{"index.html":{}}}],["watchlist",{"_index":285,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"index.html":{}}}],["watchlist/watchlist.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["watchlistcontroller",{"_index":308,"title":{"controllers/WatchlistController.html":{}},"body":{"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"coverage.html":{}}}],["watchlistmodule",{"_index":38,"title":{"modules/WatchlistModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WatchlistModule.html":{},"modules.html":{},"overview.html":{}}}],["watchlists",{"_index":225,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["watchlistservice",{"_index":349,"title":{"injectables/WatchlistService.html":{}},"body":{"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"overview.html":{}}}],["watchlistservice,private",{"_index":354,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["whitelist",{"_index":364,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["wold",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["xx",{"_index":529,"title":{},"body":{"index.html":{}}}],["xxx",{"_index":530,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('/')\n  async getHello(): Promise {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBalancesModule\n\nBalancesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBalancesModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nWatchlistModule\n\nWatchlistModule\n\nAppModule -->\n\nWatchlistModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BalancesModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            WatchlistModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from './shared';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BalancesModule } from './balances/balances.module';\nimport { WatchlistModule } from './watchlist/watchlist.module';\n\n@Module({\n  imports: [SharedModule, BalancesModule, WatchlistModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  constructor() {}\n  async getHello(): Promise {\n    // const result = await this.db.create('vitalikWatchlist', ['matic-network']);\n    return `Hello Wold!`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BalancesController.html":{"url":"controllers/BalancesController.html","title":"controller - BalancesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BalancesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balances/controller/balances/balances.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                balance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAggregatedBalances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAggregatedBalances\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregatedBalances(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:address')\n                \n            \n\n            \n                \n                    Defined in src/balances/controller/balances/balances.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { BalancesService } from 'src/balances/services/balances/balances.service';\n\n@Controller('balance')\nexport class BalancesController {\n    constructor(private readonly balancesService: BalancesService) {}\n    \n    //1 Get aggregated balances for a given address\n    @Get('/:address')\n    async getAggregatedBalances(@Param('address') address: string) {\n        const chains = [1,137,250];\n        const result = await this.balancesService.getData(address, chains);\n        const output = this.balancesService.outputData(result, chains);\n        return output;\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BalancesModule.html":{"url":"modules/BalancesModule.html","title":"module - BalancesModule","body":"\n                   \n\n\n\n\n    Modules\n    BalancesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BalancesModule\n\n\n\ncluster_BalancesModule_providers\n\n\n\n\nBalancesService\n\nBalancesService\n\n\n\nBalancesModule\n\nBalancesModule\n\nBalancesModule -->\n\nBalancesService->BalancesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/balances/balances.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BalancesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BalancesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { BalancesController } from './controller/balances/balances.controller';\nimport { BalancesService } from './services/balances/balances.service';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [ ConfigModule.forRoot(),HttpModule],\n  providers: [BalancesService],\n  controllers: [BalancesController]\n})\nexport class BalancesModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BalancesService.html":{"url":"injectables/BalancesService.html","title":"injectable - BalancesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BalancesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balances/services/balances/balances.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatData\n                            \n                            \n                                    Async\n                                getAggrgate\n                            \n                            \n                                    Async\n                                getData\n                            \n                            \n                                outputData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/balances/services/balances/balances.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatData\n                        \n                    \n                \n            \n            \n                \nformatData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/balances/services/balances/balances.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { Totalbalance: number; result: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAggrgate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggrgate(address: string, chain: number)\n                \n            \n\n\n            \n                \n                    Defined in src/balances/services/balances/balances.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chain\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getData(address: string, chains: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/balances/services/balances/balances.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chains\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputData\n                        \n                    \n                \n            \n            \n                \noutputData(data: any, chains: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/balances/services/balances/balances.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chains\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { catchError, firstValueFrom, map } from 'rxjs';\nimport { HttpException } from '@nestjs/common/exceptions';\n@Injectable()\nexport class BalancesService {\n    constructor(private readonly httpService: HttpService) {\n\n    }\n\n    formatData(data: any){\n      let Totalbalance = 0.0;\n      let result:any = [];\n      data.forEach((item: any) => {\n        const { logo_url,contract_ticker_symbol, contract_name, contract_decimals,  balance, contract_address } = item;\n        // const balanceInUSD = parseFloat(quote_rate) * parseFloat(balance) / Math.pow(10, contract_decimals);\n        // console.log(balanceInUSD);\n        // if( typeof balanceInUSD === 'number' && !isNaN(balanceInUSD)){\n          \n        //   Totalbalance += balanceInUSD;\n        // }\n        const balanceInUSD = parseFloat(balance) / Math.pow(10, contract_decimals); // formula unknown\n        result.push({\n            name: contract_name,\n            symbol: contract_ticker_symbol,\n            decimals: contract_decimals,\n            contractAddress:contract_address,\n            contractDecimals:contract_decimals,\n            logo:logo_url,\n            balance:balance,\n            balanceInUSD:\"$\"+balanceInUSD\n        })\n      });\n    return {Totalbalance,result};\n    }\n\n\n    outputData(data: any, chains:number[]): any {\n        const result: any = {\n            address: data.address,\n            balances: {\n              eth:[],\n              polygon:[],\n              phantom:[]\n            },\n            totalBalanceInUSD: 0.0\n          }\n        \n        chains.forEach((chain) => {\n  \n          switch (chain) {\n            case 1:\n              \n              var res = this.formatData(data.items[0])\n              result.totalBalanceInUSD+=res.Totalbalance;\n              result.balances.eth = res.result;\n              break;\n            case 137:\n              var res = this.formatData(data.items[1])\n              result.totalBalanceInUSD+=res.Totalbalance;\n              result.balances.polygon = res.result;\n              break;\n            case 250:\n              var res = this.formatData(data.items[2])\n              result.totalBalanceInUSD+=res.Totalbalance;\n              result.balances.phantom = res.result;\n              break;\n            default:\n              break;\n          }\n        });\n        result.totalBalanceInUSD = \"$\"+result.totalBalanceInUSD;\n        return result;\n    }\n\n    async getAggrgate(address: string,chain:number): Promise{\n        const url = `https://api.covalenthq.com/v1/${chain}/address/${address as string}/balances_v2/?key=${process.env.COVALENT_API_KEY as string}`;\n        const { data }: any = await firstValueFrom(\n            this.httpService.get(url, {\n              headers: { \"Accept-Encoding\": \"gzip,deflate,compress\" }\n            }).pipe(\n              map((v:any) => { return v.data }),\n              catchError((error) => {\n                throw new HttpException(error.response.data, error.response.status);\n              }),\n            ),\n          );\n        return data.items;\n    }\n\n    async getData(address:string, chains:number[]){\n      const result:any = {\n        address: address,\n        items: []\n      }\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTokenDto.html":{"url":"classes/CreateTokenDto.html","title":"class - CreateTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/dtos/CreateToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tokensToBeAdded\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tokensToBeAdded\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Missing field tokensToBeAdded'})@ArrayMinSize(1, {message: 'Please provide at least one token to add'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/watchlist/dtos/CreateToken.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsNotEmpty } from \"class-validator\";\n\nexport class CreateTokenDto{\n    @IsNotEmpty({message:'Missing field tokensToBeAdded'})\n    @ArrayMinSize(1,{message:'Please provide at least one token to add'})\n    tokensToBeAdded:Array;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DbService.html":{"url":"injectables/DbService.html","title":"injectable - DbService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/db.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                WatchLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteWatchlist\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/db.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string, data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWatchlist(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(key: string, data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        WatchLists\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/shared/db.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n// import { uuid } from 'uuidv4';  //dprecated\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable()\nexport class DbService {\n  private WatchLists;\n  // private coinList;\n\n  constructor() {\n    const dbLocal = require('db-local');\n    const { Schema } = new dbLocal({ path: './databases' });\n\n    // this.coinList = Schema('coinList', {\n    //   _id: { type: String, required: true },\n    //   symbol: { type: String, required: true },\n    //   name: { type: String, required: true }\n    // });\n\n    \n    this.WatchLists = Schema('WatchLists', {\n      _id: { type: String, required: true },\n      name: { type: String, default: 'Customer' },\n      tokens: { type: Array, default: [] },\n    });\n  }\n\n  async find(key: string) {\n    if (key === 'All') {\n      const res = this.WatchLists.find();\n      return {\n        message:\"All Watchlists found successfully\",\n        data:res\n      };\n    }\n    const reqWList:any = this.WatchLists.find({ _id: key });\n    if (typeof reqWList !== 'undefined' && reqWList.length === 0) {\n      throw new HttpException(\"Watchlist Not Found\", HttpStatus.NOT_FOUND);\n    }\n    return {\n      message:\"Watchlist found successfully\",\n      data: reqWList\n    };\n  }\n\n  async create(name: string, data: Array) {\n    const res = this.WatchLists.create({\n      _id: uuidv4(),\n      name: name,\n      tokens: data,\n    }).save();\n    return {\n      message:\"Watchlist created successfully\",\n      data:res\n    };\n  }\n\n\n  async update(key: string, data: Array) {\n    const reqWList:any = this.WatchLists.find({ _id: key });\n    if (typeof reqWList !== 'undefined' && reqWList.length === 0) {\n      throw new HttpException(\"Watchlist Not Found\", HttpStatus.NOT_FOUND);\n    }\n    reqWList.forEach((element: any) => {\n    const updatedTokens = [...new Set(element.tokens.concat(data))];\n    element.update({ tokens: updatedTokens }).save();\n    \n    });\n    return {\n      message:\"Tokens added to watchlist successfully\",\n      data:data\n    }\n  }\n\n\n  async delete(key: string,data:Array) {\n    const reqWList:any = this.WatchLists.find({ _id: key });\n    console.log(reqWList);\n    if (typeof reqWList !== 'undefined' && reqWList.length === 0) {\n      throw new HttpException(\"Watchlist Not Found\", HttpStatus.NOT_FOUND);\n    }\n\n    reqWList.forEach((element: any) => {\n    const updatedTokens = element.tokens.filter((item: any) => !data.includes(item));\n    element.update({ tokens: updatedTokens }).save();\n    });\n    return {\n      message:\"Tokens deleted from watchlist successfully\",\n      data:data\n    }\n  }\n\n  async deleteWatchlist(key: string) {\n    const reqWList = this.WatchLists.find({_id:key });\n    console.log(reqWList);\n    if (typeof reqWList !== 'undefined' && reqWList.length === 0) {\n      throw new HttpException(\"Watchlist Not Found\", HttpStatus.NOT_FOUND);\n    }\n    reqWList.forEach((element: any) => {\n      element.remove();\n    });\n    // const res = reqWList.delete();\n    return {\n      message:\"Watchlist deleted successfully\",\n      data:reqWList\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteTokenDto.html":{"url":"classes/DeleteTokenDto.html","title":"class - DeleteTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/dtos/DeleteToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tokensToBeDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tokensToBeDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Missing field tokensToBeAdded'})@ArrayMinSize(1, {message: 'Please provide at least one token to add'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/watchlist/dtos/DeleteToken.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsNotEmpty } from \"class-validator\";\n\nexport class DeleteTokenDto{\n    @IsNotEmpty({message:'Missing field tokensToBeAdded'})\n    @ArrayMinSize(1,{message:'Please provide at least one token to add'})\n    tokensToBeDeleted:Array;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nDbService \n\nDbService \n\n\n\nSharedModule\n\nSharedModule\n\nDbService  -->\n\nSharedModule->DbService \n\n\n\n\n\nDbService\n\nDbService\n\nSharedModule -->\n\nDbService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DbService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DbService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DbService } from './db.service';\n/*\nhttps://docs.nestjs.com/modules\n*/\n\nimport { Module } from '@nestjs/common';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [DbService],\n  exports: [DbService],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WatchlistController.html":{"url":"controllers/WatchlistController.html","title":"controller - WatchlistController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WatchlistController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/controller/watchlist/watchlist.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                watchlist\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTokens\n                            \n                            \n                                    Async\n                                createWatchlist\n                            \n                            \n                                    Async\n                                deleteTokens\n                            \n                            \n                                    Async\n                                deleteWatchlist\n                            \n                            \n                                    Async\n                                getAllWatchlists\n                            \n                            \n                                    Async\n                                getCoinList\n                            \n                            \n                                    Async\n                                getWatchlist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTokens(payload: CreateTokenDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/addTokens/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWatchlist(payload: createWatchlistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                createWatchlistDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTokens(payload: DeleteTokenDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/deleteTokens/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                DeleteTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWatchlist(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete/:name')\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllWatchlists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllWatchlists()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCoinList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoinList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/coinlist')\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWatchlist(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get/:id')\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller,  Param, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { Delete, Get, Post, Put } from '@nestjs/common/decorators/http/request-mapping.decorator';\nimport { DbService } from 'src/shared';\nimport { CreateTokenDto } from 'src/watchlist/dtos/CreateToken.dto';\nimport { createWatchlistDto } from 'src/watchlist/dtos/CreateWatchlist.dto';\nimport { DeleteTokenDto } from 'src/watchlist/dtos/DeleteToken.dto';\nimport { WatchlistService } from 'src/watchlist/services/watchlist/watchlist.service';\n// import { AddTokenDto } from 'src/watchlist/dtos/AddToken.dto';\n@Controller('watchlist')\nexport class WatchlistController {\n    constructor(private readonly watchlistService: WatchlistService,private readonly dbservice:DbService) {}\n\n    //2.1 Get all coins\n    @Get('/coinlist')\n    async getCoinList() {\n        const data = await this.watchlistService.getCoinList();\n        return data;\n    }\n\n    //Get all watchlists\n    @Get('/getAll')\n    async getAllWatchlists() {\n        const data = await this.dbservice.find('All');\n        return data;\n    }\n\n    //2.2 Create watchlist\n    @Post('/create')\n    @UsePipes(new ValidationPipe({\n        transform: true,\n        whitelist: true,\n    }))\n    async createWatchlist(@Body() payload: createWatchlistDto) {\n        const data = await this.dbservice.create(payload.name, []);\n        return data;\n    }\n\n    //2.3 Add token to watchlist by ID\n    @Put('/addTokens/:id')\n    @UsePipes(new ValidationPipe({\n        transform: true,\n        whitelist: true,\n    }))\n    async addTokens(@Body() payload: CreateTokenDto, @Param('id') id: string) {\n        const tokens = await this.watchlistService.validateTokens(payload.tokensToBeAdded);\n        const res = await this.dbservice.update(id, tokens);\n        return res;\n    }\n\n    //2.4 Delete tokens from watchlist by ID\n    @Put('/deleteTokens/:id')\n    @UsePipes(new ValidationPipe({\n        transform: true,\n        whitelist: true,\n    }))\n    async deleteTokens(@Body() payload: DeleteTokenDto, @Param('id') id: string) {\n        const tokens = await this.watchlistService.validateTokens(payload.tokensToBeDeleted);\n        const res = await this.dbservice.delete(id, tokens);\n        return res;\n    }\n\n\n    //2.5 Get watchlist by ID\n    @Get('/get/:id')\n    async getWatchlist(@Param('id') id: string) {\n        const data = await this.dbservice.find(id);\n        return data;\n    }\n\n    //2.6 Delete watchlist by ID\n    @Delete('/delete/:name')\n    async deleteWatchlist(@Param('name') name: string) {\n        const data = await this.dbservice.deleteWatchlist(name);\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WatchlistModule.html":{"url":"modules/WatchlistModule.html","title":"module - WatchlistModule","body":"\n                   \n\n\n\n\n    Modules\n    WatchlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WatchlistModule\n\n\n\ncluster_WatchlistModule_providers\n\n\n\ncluster_WatchlistModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nWatchlistModule\n\nWatchlistModule\n\nWatchlistModule -->\n\nSharedModule->WatchlistModule\n\n\n\n\n\nWatchlistService\n\nWatchlistService\n\nWatchlistModule -->\n\nWatchlistService->WatchlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/watchlist/watchlist.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WatchlistService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WatchlistController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { SharedModule } from 'src/shared';\nimport { WatchlistController } from './controller/watchlist/watchlist.controller';\nimport { WatchlistService } from './services/watchlist/watchlist.service';\n\n@Module({\n  imports: [SharedModule,HttpModule],\n  controllers: [WatchlistController],\n  providers: [WatchlistService]\n})\nexport class WatchlistModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistService.html":{"url":"injectables/WatchlistService.html","title":"injectable - WatchlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/services/watchlist/watchlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createWatchlist\n                            \n                            \n                                    Async\n                                getCoinList\n                            \n                            \n                                    Async\n                                validateTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, dbService: DbService)\n                    \n                \n                        \n                            \n                                Defined in src/watchlist/services/watchlist/watchlist.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWatchlist(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/watchlist/services/watchlist/watchlist.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCoinList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoinList()\n                \n            \n\n\n            \n                \n                    Defined in src/watchlist/services/watchlist/watchlist.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateTokens(tokens: any)\n                \n            \n\n\n            \n                \n                    Defined in src/watchlist/services/watchlist/watchlist.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport {  HttpException, Injectable } from '@nestjs/common';\nimport { catchError, firstValueFrom, map } from 'rxjs';\nimport { DbService } from 'src/shared';\n\n@Injectable()\nexport class WatchlistService {\n    constructor(private readonly httpService: HttpService,private readonly dbService:DbService) {}\n\n    \n    async getCoinList() {\n        const url = `https://api.coingecko.com/api/v3/coins/list`;\n        \n        const  data : any = await firstValueFrom(\n            this.httpService.get(url, {\n              headers: { \"Accept-Encoding\": \"gzip,deflate,compress\" }\n            }).pipe(\n              map((v:any) => { return v.data }),\n              catchError((error) => {\n                throw new HttpException(error.response.data, error.response.status);\n              }),\n            ),\n          );\n        return data;\n    }\n\n    async createWatchlist(name: string) {\n      const data = await this.dbService.create(name, []);\n      return data;\n        \n    }\n\n    async validateTokens(tokens: any){\n        const chainList = await this.getCoinList();\n        const values = tokens.filter((v:any) => chainList.some((c:any) => c.id == v));\n        return values;\n    }\n\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/balances/controller/balances/balances.controller.ts\n            \n            controller\n            BalancesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/balances/services/balances/balances.service.ts\n            \n            injectable\n            BalancesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/db.service.ts\n            \n            injectable\n            DbService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/watchlist/controller/watchlist/watchlist.controller.ts\n            \n            controller\n            WatchlistController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/watchlist/dtos/CreateToken.dto.ts\n            \n            class\n            CreateTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/watchlist/dtos/CreateWatchlist.dto.ts\n            \n            class\n            createWatchlistDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/watchlist/dtos/DeleteToken.dto.ts\n            \n            class\n            DeleteTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/watchlist/services/watchlist/watchlist.service.ts\n            \n            injectable\n            WatchlistService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createWatchlistDto.html":{"url":"classes/createWatchlistDto.html","title":"class - createWatchlistDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createWatchlistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/dtos/CreateWatchlist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Missing field name'})@IsAlphanumeric()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/watchlist/dtos/CreateWatchlist.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty, Length } from \"class-validator\";\n\nexport class createWatchlistDto {\n    @IsNotEmpty({message:'Missing field name'})\n    @IsAlphanumeric()\n    @Length(5, 20)\n    name:string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @moralisweb3/common-evm-utils : ^2.12.0\n        \n            @nestjs/axios : ^1.0.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            db-local : ^2.9.0\n        \n            express : ^4.18.2\n        \n            moralis : ^2.12.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            uuidv4 : ^6.2.13\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInstallation\n$ npm installEnvironment Variables\nTo run this project, you will need to add the following environment variables to your .env file\nCOVALENT_API_KEY\nRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodBackend Problem Statement\nLINK to the problem statement.\nCypherD - Backend\nPrerequisites\n\nUnderstand Nestjs - a typescript based Backend MVC Framework Module , Controllers , Providers , Validations\nUnderstand local-db - A simple alternative to database with simple JSON.\nUnderstand REST Architecture, HTTP Verbs and Response Codes\n\nPoints to Consider:\n\nAPI endpoints must follow REST Architectural Patterns and Guidelines (https://www.codecademy.com/article/what-is-rest )\nVariable Names , Function Names, Class Names should be Meaningful.\n\nProblem Statement: Create a RESTful API\n1. An Endpoint to Get the aggregate token balances of an address in the following chains: Ethereum, Fantom, and Polygon.\n\n Integrate with CovalentHq - https://api.covalenthq.com/v1/1/address/0x52114fb7396dbe19096ffa343d18830f5d77b6c6/balances_v2/?key=\n\nSample Input:\n     0x52114fb7396dbe19096ffa343d18830f5d77b6c6\nSample Output :\n{\n    address: \"0x52114fb7396dbe19096ffa343d18830f5d77b6c6\",\n    balances: {\n        eth: [\n        {\n            name: '',\n            symbol:'',\n            decimals:'',\n            contractAddress:'',\n            contractDeicmals:'',\n            logo:'',\n            balance: xx,\n            balanceInUSD: xx,\n        }\n        ],\n        polygon:[],\n        fantom:[],\n    },\n    totalBalanceInUSD: XXX\n}\n2. Watchlist Management Feature\n2.1 An Endpoint to Get Master Coin list - Coingecko Integration\n\n Integrate with following API to generate the master list of tokens https://api.coingecko.com/api/v3/coins/list\n id field in the response should be used in upcoming APIs to track these coins through the watchlist\n\nSample Output:\n{\n    coins:\n    [\n        {\n            \"id\": \"matic-network\",\n            \"symbol\": \"matic\",\n            \"name\": \"Polygon\"\n        },\n\n    ]\n}\n2.2 An Endpoint to Create Watchlist with a name\nValidation : name should be alphanumeric with minimum of 5 characters and maximum of 20Sample Input :\n{\n    name: \"vitalikWatchlist\"\n}\nSample Output :\n{\n    id: \"24cf68e1-3ef1-403b-9851-44a90cb32816\",\n    name: \"vitalikWatchlist\",\n    tokens: []\n}\n2.3 Add tokens to Watchlist\nValidation :- tokensToBeAdded list should be validated with Coingecko List with the id field.\\\n\nshould ignore duplicates\n\nSample Input :\n{\n    tokensToBeAdded: [ \"matic-network\"]\n}\nSample Output:\n{\n    id: \"24cf68e1-3ef1-403b-9851-44a90cb32816\",\n    name: \"vitalikWatchlist\",\n    tokens: [\"matic-network\"]\n}\n2.4 Delete tokens from Watchlist\nSample Input\n{\n    tokensToBeDeleted: [\"matic-network\"\"]\n}\nSample Output\n{\n    id: \"24cf68e1-3ef1-403b-9851-44a90cb32816\",\n    name: \"vitalikWatchlist\",\n    tokens: []\n}\n2.5 An Endpoint to Get Watchlist by its id\nSample Output\n{\n    id: \"24cf68e1-3ef1-403b-9851-44a90cb32816\",\n    name: \"vitalikWatchlist\",\n    tokens: [\"matic-network\", \"gravity-finance\"]\n}\n2.6 An Endpoint to Delete Watchlist by its id\nReferences :\nhttps://www.coingecko.com/en/api/documentation\nhttps://www.covalenthq.com/platform/#/auth/register/ - For Api key generation\nhttps://www.covalenthq.com/docs/api - CovalentHQ Docs\nhttps://www.codecademy.com/article/what-is-rest\n\n\n\nchain\nid\n\n\n\n\nethereum\n1\n\n\npolygon\n137\n\n\nfantom\n250\n\n\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BalancesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WatchlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BalancesModule\n\n\n\ncluster_BalancesModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_WatchlistModule\n\n\n\ncluster_WatchlistModule_providers\n\n\n\n\nBalancesModule\n\nBalancesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBalancesModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nWatchlistModule\n\nWatchlistModule\n\nWatchlistModule -->\n\nSharedModule->WatchlistModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDbService \n\nDbService \n\nDbService  -->\n\nSharedModule->DbService \n\n\n\nAppModule -->\n\nWatchlistModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBalancesService\n\nBalancesService\n\nBalancesModule -->\n\nBalancesService->BalancesModule\n\n\n\n\n\nDbService\n\nDbService\n\nSharedModule -->\n\nDbService->SharedModule\n\n\n\n\n\nWatchlistService\n\nWatchlistService\n\nWatchlistModule -->\n\nWatchlistService->WatchlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Repository : [object Object]\n        \n            Author : jmarc@cypherd.io\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
