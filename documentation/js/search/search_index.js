var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.116,1,1.646]],["body/controllers/AppController.html",[0,1.735,1,2.559,2,1.21,3,0.531,4,0.446,5,0.446,6,2.768,7,0.719,8,1.735,9,1.905,10,4.047,11,1.552,12,0.048,13,0.941,14,3.418,15,1.37,16,2.964,17,0.672,18,0.719,19,2.158,20,2.768,21,0.531,22,0.154,23,1.552,24,1.552,25,1.37,26,3.418,27,0.037,28,0.037]],["title/modules/AppModule.html",[29,0.986,30,1.646]],["body/modules/AppModule.html",[1,2.572,2,1.362,3,0.443,4,0.372,5,0.372,12,0.048,17,0.778,18,0.6,19,2.276,20,2.31,21,0.443,22,0.128,27,0.033,28,0.033,29,1.362,30,3.205,31,1.143,32,1.542,33,2.31,34,2.31,35,2.31,36,2.588,37,2.276,38,2.588,39,1.986,40,1.472,41,1.472,42,2.852,43,2.273,44,2.273,45,2.31,46,2.852,47,2.852,48,2.852]],["title/injectables/AppService.html",[19,1.264,49,0.871]],["body/injectables/AppService.html",[3,0.489,4,0.411,5,0.411,7,0.663,8,1.646,9,1.832,10,3.924,12,0.048,13,1.131,15,1.261,16,2.812,17,0.638,18,0.663,19,1.865,21,0.489,22,0.141,23,1.429,24,1.429,25,1.261,27,0.035,28,0.035,45,2.549,49,1.284,50,1.625,51,2.549,52,1.86,53,3.148,54,1.716,55,3.148,56,1.429,57,1.261,58,0.867,59,1.429,60,3.326,61,3.148,62,1.429,63,2.155,64,1.625,65,3.148,66,3.148,67,3.148,68,3.148,69,3.148,70,3.148]],["title/controllers/BalancesController.html",[0,1.116,71,1.646]],["body/controllers/BalancesController.html",[0,1.188,2,1.049,3,0.46,4,0.386,5,0.386,7,0.624,8,1.582,9,1.778,11,1.345,12,0.048,13,0.816,15,1.188,17,0.613,18,0.624,21,0.46,22,0.133,23,1.345,24,1.345,25,1.188,27,0.034,28,0.034,56,1.345,57,1.188,58,0.816,59,1.345,62,2.015,63,2.029,64,1.53,71,2.332,72,2.4,73,2.4,74,2.4,75,3.947,76,2.964,77,2.015,78,3.947,79,2.964,80,3.594,81,1.53,82,2.4,83,2.015,84,2.964,85,2.964,86,2.4,87,2.964,88,2.4,89,2.964,90,2.964,91,3.594,92,2.964,93,2.964,94,3.947,95,2.964]],["title/modules/BalancesModule.html",[29,0.986,36,1.437]],["body/modules/BalancesModule.html",[2,1.47,3,0.497,4,0.417,5,0.417,12,0.048,17,0.784,18,0.674,21,0.497,22,0.144,27,0.036,28,0.036,29,1.47,31,1.283,32,1.664,36,2.673,39,2.144,40,1.653,41,1.653,43,2.454,44,1.892,71,2.724,83,2.351,96,2.592,97,2.592,98,3.201,99,2.592,100,1.653,101,3.201,102,3.201,103,3.201,104,2.592,105,3.201]],["title/injectables/BalancesService.html",[49,0.871,83,1.264]],["body/injectables/BalancesService.html",[3,0.234,4,0.196,5,0.196,7,0.317,8,0.961,9,1.591,12,0.049,13,1.026,15,1.367,16,1.642,17,0.53,18,0.317,21,0.234,22,0.068,23,0.683,24,0.683,25,1.367,27,0.021,28,0.021,49,0.75,50,0.777,52,0.889,56,1.692,57,1.591,58,1.026,59,1.692,62,1.892,63,2.047,64,0.777,74,1.218,77,1.692,80,3.018,81,1.238,83,1.089,86,1.218,88,1.218,91,2.763,100,0.777,106,1.218,107,2.399,108,2.399,109,2.399,110,2.399,111,1.218,112,3.216,113,1.505,114,2.399,115,1.505,116,1.767,117,2.991,118,4.326,119,2.399,120,2.991,121,1.505,122,1.505,123,1.505,124,2.399,125,1.505,126,1.218,127,1.942,128,1.218,129,1.03,130,1.03,131,1.505,132,2.399,133,2.399,134,1.505,135,1.505,136,2.399,137,3.412,138,1.505,139,1.505,140,3.412,141,1.505,142,2.399,143,2.399,144,1.505,145,1.218,146,1.505,147,1.505,148,1.505,149,1.218,150,1.505,151,1.505,152,1.505,153,1.505,154,1.505,155,1.505,156,1.505,157,1.505,158,2.399,159,1.505,160,1.505,161,1.505,162,1.505,163,1.505,164,1.505,165,1.505,166,2.991,167,2.991,168,2.047,169,1.505,170,2.991,171,1.505,172,2.991,173,3.412,174,1.505,175,1.505,176,1.505,177,1.505,178,1.505,179,1.505,180,1.218,181,2.399,182,1.505,183,1.218,184,1.505,185,1.505,186,1.218,187,1.218,188,1.218,189,1.218,190,1.218,191,1.218,192,1.218,193,1.218,194,1.218,195,1.03,196,0.889,197,1.218,198,1.218,199,1.505,200,1.505,201,1.505,202,1.03]],["title/classes/CreateTokenDto.html",[22,0.125,203,1.646]],["body/classes/CreateTokenDto.html",[3,0.533,4,0.448,5,0.448,7,0.723,11,1.559,12,0.046,13,0.946,17,0.533,21,0.533,22,0.195,27,0.037,28,0.037,58,0.946,203,2.566,204,2.029,205,2.78,206,1.972,207,3.858,208,2.35,209,2.35,210,2.35,211,2.973,212,2.78,213,2.78,214,2.35,215,3.517,216,3.517,217,2.973,218,2.973,219,3.433,220,2.78,221,2.35,222,2.029,223,2.35,224,2.78,225,3.433]],["title/injectables/DbService.html",[49,0.871,54,0.986]],["body/injectables/DbService.html",[3,0.19,4,0.159,5,0.159,7,0.257,8,0.811,9,1.885,12,0.049,13,1.051,15,1.339,17,0.402,18,0.257,21,0.19,22,0.055,25,1.444,27,0.017,28,0.017,49,0.633,50,0.63,52,1.532,54,0.717,56,1.517,57,1.711,58,1.206,59,1.517,62,1.988,77,2.232,81,1.725,116,2.523,130,0.836,145,2.442,149,0.989,168,1.774,180,1.639,195,2.064,196,2.129,202,2.064,206,0.919,208,2.835,226,0.989,227,3.015,228,2.442,229,1.639,230,1.639,231,1.639,232,2.024,233,2.024,234,2.024,235,2.024,236,1.221,237,2.024,238,1.221,239,3.993,240,2.024,241,1.221,242,2.024,243,1.221,244,2.024,245,1.221,246,1.221,247,2.024,248,2.099,249,1.221,250,1.221,251,1.221,252,2.024,253,1.221,254,0.989,255,1.221,256,1.221,257,1.221,258,1.221,259,1.221,260,3.603,261,3.015,262,2.442,263,1.221,264,1.221,265,1.221,266,2.064,267,3.015,268,1.221,269,3.603,270,3.603,271,2.024,272,2.592,273,3.603,274,3.015,275,3.015,276,3.015,277,3.015,278,2.592,279,1.221,280,2.592,281,1.221,282,2.592,283,3.015,284,1.221,285,2.024,286,2.024,287,1.221,288,1.639,289,2.024,290,1.221,291,2.024,292,1.221,293,1.221,294,2.024,295,1.221,296,1.221,297,1.221,298,1.221]],["title/classes/DeleteTokenDto.html",[22,0.125,299,1.646]],["body/classes/DeleteTokenDto.html",[3,0.533,4,0.448,5,0.448,7,0.723,11,1.559,12,0.046,13,0.946,17,0.533,21,0.533,22,0.195,27,0.037,28,0.037,58,0.946,204,2.029,206,1.972,207,2.78,208,2.35,209,2.35,210,2.35,211,2.973,212,2.78,213,2.78,214,2.35,215,3.517,216,3.517,217,2.973,218,2.973,220,2.78,221,2.35,222,2.029,223,2.35,224,2.78,299,2.566,300,2.78,301,4.343,302,3.433,303,3.433]],["title/modules/SharedModule.html",[29,0.986,37,1.264]],["body/modules/SharedModule.html",[2,1.153,3,0.505,4,0.425,5,0.425,12,0.048,17,0.652,18,0.685,21,0.505,22,0.146,27,0.036,28,0.036,29,1.487,31,1.305,32,1.682,37,2.403,39,2.167,40,1.681,41,1.681,43,2.481,44,1.924,54,1.959,304,2.637,305,2.637,306,2.637,307,3.256,308,4.199,309,3.256,310,3.256]],["title/controllers/WatchlistController.html",[0,1.116,311,1.646]],["body/controllers/WatchlistController.html",[0,0.559,2,0.494,3,0.216,4,0.182,5,0.182,7,0.293,8,0.904,9,2.051,11,1.834,12,0.048,13,1.113,15,1.619,17,0.653,18,0.293,21,0.216,22,0.063,23,0.633,24,1.024,25,1.619,27,0.019,28,0.019,54,0.494,56,1.628,57,1.619,58,0.988,59,1.628,62,1.973,64,2.243,73,1.129,77,2.112,81,2.085,82,1.129,116,2.637,168,2.235,203,1.929,217,0.954,218,0.954,228,1.129,229,1.129,230,2.301,231,1.827,262,3.107,266,2.455,288,3.107,299,1.929,311,1.333,312,1.129,313,2.256,314,1.827,315,2.256,316,3.265,317,2.644,318,2.256,319,1.394,320,4.653,321,1.394,322,4.04,323,1.394,324,3.837,325,1.394,326,1.929,327,1.394,328,1.394,329,1.394,330,1.394,331,1.394,332,1.394,333,2.256,334,1.394,335,2.256,336,1.394,337,2.256,338,1.394,339,1.394,340,2.256,341,1.394,342,1.394,343,1.394,344,1.394,345,1.394,346,1.394,347,1.394,348,0.954,349,1.394,350,1.394,351,1.394,352,1.024,353,1.394,354,1.394,355,1.394,356,1.394,357,1.394,358,1.129,359,1.394,360,1.394,361,1.394,362,1.394,363,1.394,364,1.394,365,2.841,366,2.841,367,2.841,368,1.394,369,1.394,370,1.394,371,1.394,372,1.394,373,2.256,374,1.394,375,1.394,376,1.394,377,1.394,378,1.394,379,1.394,380,1.394,381,1.394,382,1.394,383,1.394,384,1.394,385,1.394,386,1.394]],["title/modules/WatchlistModule.html",[29,0.986,38,1.437]],["body/modules/WatchlistModule.html",[2,1.439,3,0.481,4,0.404,5,0.404,12,0.048,17,0.776,18,0.652,21,0.481,22,0.139,27,0.035,28,0.035,29,1.439,31,1.241,32,1.628,37,2.27,38,2.739,39,2.098,40,1.599,41,1.599,43,2.401,44,2.401,99,2.508,100,1.599,311,2.68,348,2.12,352,2.33,387,2.508,388,2.508,389,3.097,390,3.097,391,3.097,392,3.097,393,3.097]],["title/injectables/WatchlistService.html",[49,0.871,352,1.264]],["body/injectables/WatchlistService.html",[3,0.334,4,0.28,5,0.28,7,0.452,8,1.263,9,1.982,12,0.049,13,1.132,15,1.495,17,0.638,18,0.452,21,0.334,22,0.097,23,0.976,24,1.431,25,1.647,27,0.027,28,0.027,49,0.985,50,1.109,52,1.27,54,1.55,56,1.694,57,1.647,58,1.028,59,1.694,62,1.987,64,1.926,77,1.694,81,1.926,100,1.109,111,1.74,112,3.544,116,2.429,126,1.74,127,2.552,128,1.74,129,1.471,130,1.471,183,1.74,186,1.74,187,1.74,188,1.74,189,1.74,190,1.74,191,1.74,192,1.74,193,1.74,194,1.74,195,1.471,196,1.27,197,1.74,198,1.74,266,1.471,314,2.552,317,3.329,348,1.471,352,1.431,358,1.74,394,1.74,395,3.151,396,2.149,397,3.151,398,2.149,399,2.149,400,3.151,401,2.149,402,2.149,403,2.149,404,2.149,405,2.149,406,2.149,407,2.149,408,3.151,409,2.149,410,2.149,411,2.149,412,2.149]],["title/coverage.html",[413,2.591]],["body/coverage.html",[0,1.807,1,1.808,5,0.399,6,2.477,12,0.047,19,1.389,22,0.203,27,0.035,28,0.035,49,1.499,51,2.477,54,1.083,58,0.843,71,1.808,72,2.477,83,1.389,106,2.477,196,1.808,202,3.729,203,1.808,205,2.477,226,2.477,299,1.808,300,2.477,311,1.808,312,2.477,326,1.808,352,1.389,394,2.477,413,2.094,414,3.059,415,3.059,416,3.059,417,4.981,418,3.059,419,3.059,420,2.477,421,3.059,422,2.477,423,3.059,424,4.031,425,2.477,426,3.059,427,3.059,428,3.059]],["title/classes/createWatchlistDto.html",[22,0.125,326,1.646]],["body/classes/createWatchlistDto.html",[3,0.545,4,0.458,5,0.458,7,0.739,11,1.595,12,0.047,13,0.968,17,0.545,21,0.545,22,0.198,27,0.038,28,0.038,57,1.929,58,0.968,77,1.595,204,2.076,206,2,209,2.405,210,2.405,211,3.016,221,2.405,222,2.076,223,2.405,326,2.604,425,2.845,429,3.513,430,4.406,431,3.513,432,4.406,433,3.513,434,3.513,435,3.513]],["title/dependencies.html",[32,1.34,436,1.889]],["body/dependencies.html",[12,0.048,18,0.716,22,0.194,27,0.037,28,0.037,32,1.363,60,2.755,100,1.756,104,2.755,129,2.329,222,2.011,248,2.755,254,2.755,437,3.402,438,3.402,439,3.402,440,4.318,441,3.402,442,4.744,443,3.402,444,3.402,445,3.402,446,4.318,447,3.402,448,3.402,449,3.402,450,3.402,451,3.402,452,3.402,453,3.402,454,3.402,455,3.402,456,3.402,457,3.402]],["title/miscellaneous/functions.html",[458,1.889,459,2.709]],["body/miscellaneous/functions.html",[7,0.883,12,0.042,27,0.042,28,0.042,420,3.395,422,4.21,458,3.395,459,3.395,460,4.193]],["title/index.html",[7,0.491,461,2.333,462,2.333]],["body/index.html",[4,0.373,12,0.047,27,0.033,28,0.033,214,1.96,413,1.96,463,2.863,464,2.863,465,3.857,466,2.863,467,2.863,468,2.863,469,2.863,470,2.863,471,2.863,472,2.318,473,4.362,474,2.863,475,2.863,476,2.318,477,2.863,478,5.129,479,2.863,480,2.863,481,2.863,482,5.018,483,2.863,484,2.863,485,3.857,486,2.863,487,2.863,488,2.863,489,2.863,490,3.857,491,3.857,492,2.863,493,2.863,494,2.863,495,3.857,496,3.857,497,2.863,498,2.863,499,2.863,500,2.863,501,2.863,502,2.318,503,2.863,504,2.863,505,2.863,506,2.863,507,2.863,508,2.863,509,2.863,510,2.863,511,2.863,512,2.318,513,2.863,514,2.863,515,2.863,516,2.863,517,2.863,518,2.863,519,2.318]],["title/modules.html",[31,1.517]],["body/modules.html",[12,0.04,27,0.04,28,0.04,30,2.311,31,1.567,36,2.019,37,1.776,38,2.019,502,4.243,520,5.24,521,5.24,522,5.24]],["title/overview.html",[523,3.065]],["body/overview.html",[2,1.066,12,0.047,19,2.031,27,0.034,28,0.034,30,3.185,31,1.206,32,1.598,33,2.438,34,2.438,35,2.438,36,2.558,37,2.358,38,2.681,39,2.059,40,1.554,41,1.554,50,1.554,54,1.839,83,2.031,96,2.438,97,2.438,204,1.779,304,2.438,305,2.438,306,2.438,352,2.031,387,2.438,388,2.438,523,2.438,524,3.989,525,3.989]],["title/properties.html",[206,1.519,436,1.889]],["body/properties.html",[12,0.047,27,0.041,28,0.041,206,1.823,472,3.251,476,3.251,512,3.251,519,3.251,526,4.015,527,4.015,528,4.015,529,4.781,530,4.015]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":202,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"coverage.html":{}}}],["0.0",{"_index":132,"title":{},"body":{"injectables/BalancesService.html":{}}}],["0.0.1",{"_index":527,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":86,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{}}}],["1,137,250",{"_index":92,"title":{},"body":{"controllers/BalancesController.html":{}}}],["1.0.1",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["137",{"_index":174,"title":{},"body":{"injectables/BalancesService.html":{}}}],["2.1",{"_index":359,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["2.12.0",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":363,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["2.2.0",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["2.3",{"_index":370,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["2.4",{"_index":376,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["2.5",{"_index":381,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["2.6",{"_index":384,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["2.9.0",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":430,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["250",{"_index":177,"title":{},"body":{"injectables/BalancesService.html":{}}}],["3",{"_index":525,"title":{},"body":{"overview.html":{}}}],["4",{"_index":524,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["6.2.13",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":260,"title":{},"body":{"injectables/DbService.html":{}}}],["accept",{"_index":188,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["add",{"_index":218,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{}}}],["added",{"_index":287,"title":{},"body":{"injectables/DbService.html":{}}}],["address",{"_index":80,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{}}}],["addtokendto",{"_index":354,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["addtokens",{"_index":313,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["addtokens(@body",{"_index":372,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["addtokens(payload",{"_index":319,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["aggregated",{"_index":87,"title":{},"body":{"controllers/BalancesController.html":{}}}],["amazing",{"_index":503,"title":{},"body":{"index.html":{}}}],["app",{"_index":480,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":471,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":208,"title":{},"body":{"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{}}}],["arrayminsize",{"_index":220,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["arrayminsize(1,{message:'please",{"_index":224,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["author",{"_index":512,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["backers",{"_index":504,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":402,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["balance",{"_index":74,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{}}}],["balance:balance",{"_index":155,"title":{},"body":{"injectables/BalancesService.html":{}}}],["balanceinusd",{"_index":140,"title":{},"body":{"injectables/BalancesService.html":{}}}],["balanceinusd:\"$\"+balanceinusd",{"_index":156,"title":{},"body":{"injectables/BalancesService.html":{}}}],["balances",{"_index":88,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{}}}],["balances/balances.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["balancescontroller",{"_index":71,"title":{"controllers/BalancesController.html":{}},"body":{"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"coverage.html":{}}}],["balancesmodule",{"_index":36,"title":{"modules/BalancesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules.html":{},"overview.html":{}}}],["balancesservice",{"_index":83,"title":{"injectables/BalancesService.html":{}},"body":{"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":342,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["bootstrap",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":173,"title":{},"body":{"injectables/BalancesService.html":{}}}],["browse",{"_index":522,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":520,"title":{},"body":{"modules.html":{}}}],["building",{"_index":466,"title":{},"body":{"index.html":{}}}],["c.id",{"_index":411,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["case",{"_index":166,"title":{},"body":{"injectables/BalancesService.html":{}}}],["catcherror",{"_index":126,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["catcherror((error",{"_index":194,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["chain",{"_index":120,"title":{},"body":{"injectables/BalancesService.html":{}}}],["chainlist",{"_index":406,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["chainlist.some((c:any",{"_index":410,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["chains",{"_index":91,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{}}}],["chains.foreach((chain",{"_index":164,"title":{},"body":{"injectables/BalancesService.html":{}}}],["chains:number",{"_index":158,"title":{},"body":{"injectables/BalancesService.html":{}}}],["class",{"_index":22,"title":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{}}}],["classes",{"_index":204,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_balancesmodule",{"_index":96,"title":{},"body":{"modules/BalancesModule.html":{},"overview.html":{}}}],["cluster_balancesmodule_providers",{"_index":97,"title":{},"body":{"modules/BalancesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":304,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":306,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":305,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_watchlistmodule",{"_index":387,"title":{},"body":{"modules/WatchlistModule.html":{},"overview.html":{}}}],["cluster_watchlistmodule_imports",{"_index":389,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["cluster_watchlistmodule_providers",{"_index":388,"title":{},"body":{"modules/WatchlistModule.html":{},"overview.html":{}}}],["coinlist",{"_index":251,"title":{},"body":{"injectables/DbService.html":{}}}],["coins",{"_index":360,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["configmodule",{"_index":103,"title":{},"body":{"modules/BalancesModule.html":{}}}],["configmodule.forroot(),httpmodule",{"_index":105,"title":{},"body":{"modules/BalancesModule.html":{}}}],["console.log(balanceinusd",{"_index":144,"title":{},"body":{"injectables/BalancesService.html":{}}}],["console.log(reqwlist",{"_index":291,"title":{},"body":{"injectables/DbService.html":{}}}],["const",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(db",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(httpservice",{"_index":111,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["contract_address",{"_index":138,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contract_decimals",{"_index":137,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contract_name",{"_index":136,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contract_ticker_symbol",{"_index":150,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contractaddress:contract_address",{"_index":152,"title":{},"body":{"injectables/BalancesService.html":{}}}],["contractdecimals:contract_decimals",{"_index":153,"title":{},"body":{"injectables/BalancesService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BalancesController.html":{},"controllers/WatchlistController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BalancesController.html":{},"controllers/WatchlistController.html":{},"coverage.html":{}}}],["controller('balance",{"_index":85,"title":{},"body":{"controllers/BalancesController.html":{}}}],["controller('watchlist",{"_index":356,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["controller/balances/balances.controller",{"_index":101,"title":{},"body":{"modules/BalancesModule.html":{}}}],["controller/watchlist/watchlist.controller",{"_index":391,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"overview.html":{}}}],["coverage",{"_index":413,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":229,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["create(name",{"_index":235,"title":{},"body":{"injectables/DbService.html":{}}}],["created",{"_index":281,"title":{},"body":{"injectables/DbService.html":{}}}],["createtokendto",{"_index":203,"title":{"classes/CreateTokenDto.html":{}},"body":{"classes/CreateTokenDto.html":{},"controllers/WatchlistController.html":{},"coverage.html":{}}}],["createwatchlist",{"_index":314,"title":{},"body":{"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["createwatchlist(@body",{"_index":368,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["createwatchlist(name",{"_index":397,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["createwatchlist(payload",{"_index":325,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["createwatchlistdto",{"_index":326,"title":{"classes/createWatchlistDto.html":{}},"body":{"controllers/WatchlistController.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{}}}],["customer",{"_index":265,"title":{},"body":{"injectables/DbService.html":{}}}],["data",{"_index":116,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["data.address",{"_index":159,"title":{},"body":{"injectables/BalancesService.html":{}}}],["data.foreach((item",{"_index":134,"title":{},"body":{"injectables/BalancesService.html":{}}}],["data.includes(item",{"_index":293,"title":{},"body":{"injectables/DbService.html":{}}}],["data.items",{"_index":199,"title":{},"body":{"injectables/BalancesService.html":{}}}],["data:data",{"_index":289,"title":{},"body":{"injectables/DbService.html":{}}}],["data:reqwlist",{"_index":298,"title":{},"body":{"injectables/DbService.html":{}}}],["data:res",{"_index":271,"title":{},"body":{"injectables/DbService.html":{}}}],["databases",{"_index":257,"title":{},"body":{"injectables/DbService.html":{}}}],["db",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["db.service",{"_index":309,"title":{},"body":{"modules/SharedModule.html":{}}}],["dblocal",{"_index":252,"title":{},"body":{"injectables/DbService.html":{}}}],["dbservice",{"_index":54,"title":{"injectables/DbService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DbService.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"overview.html":{}}}],["dbservice:dbservice",{"_index":358,"title":{},"body":{"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["decimals",{"_index":151,"title":{},"body":{"injectables/BalancesService.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/BalancesController.html":{},"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"classes/createWatchlistDto.html":{}}}],["default",{"_index":180,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["delete",{"_index":230,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["delete('/delete/:name",{"_index":333,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["delete(key",{"_index":237,"title":{},"body":{"injectables/DbService.html":{}}}],["deleted",{"_index":294,"title":{},"body":{"injectables/DbService.html":{}}}],["deletetokendto",{"_index":299,"title":{"classes/DeleteTokenDto.html":{}},"body":{"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"coverage.html":{}}}],["deletetokens",{"_index":315,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["deletetokens(@body",{"_index":378,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["deletetokens(payload",{"_index":329,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["deletewatchlist",{"_index":231,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["deletewatchlist(@param('name",{"_index":385,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["deletewatchlist(key",{"_index":240,"title":{},"body":{"injectables/DbService.html":{}}}],["deletewatchlist(name",{"_index":332,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":472,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":481,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["dprecated",{"_index":249,"title":{},"body":{"injectables/DbService.html":{}}}],["e2e",{"_index":492,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":467,"title":{},"body":{"index.html":{}}}],["element.remove",{"_index":296,"title":{},"body":{"injectables/DbService.html":{}}}],["element.tokens.filter((item",{"_index":292,"title":{},"body":{"injectables/DbService.html":{}}}],["element.update",{"_index":285,"title":{},"body":{"injectables/DbService.html":{}}}],["encoding",{"_index":189,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["error.response.status",{"_index":198,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["eth",{"_index":160,"title":{},"body":{"injectables/BalancesService.html":{}}}],["evm",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["exports",{"_index":308,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":211,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{}}}],["find",{"_index":232,"title":{},"body":{"injectables/DbService.html":{}}}],["find(key",{"_index":242,"title":{},"body":{"injectables/DbService.html":{}}}],["firstvaluefrom",{"_index":127,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["formatdata",{"_index":107,"title":{},"body":{"injectables/BalancesService.html":{}}}],["formatdata(data",{"_index":114,"title":{},"body":{"injectables/BalancesService.html":{}}}],["formula",{"_index":147,"title":{},"body":{"injectables/BalancesService.html":{}}}],["found",{"_index":269,"title":{},"body":{"injectables/DbService.html":{}}}],["framework",{"_index":465,"title":{},"body":{"index.html":{}}}],["function",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":459,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:address",{"_index":78,"title":{},"body":{"controllers/BalancesController.html":{}}}],["get('/coinlist",{"_index":337,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["get('/get/:id",{"_index":340,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["get('/getall",{"_index":335,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["getaggregatedbalances",{"_index":75,"title":{},"body":{"controllers/BalancesController.html":{}}}],["getaggregatedbalances(@param('address",{"_index":90,"title":{},"body":{"controllers/BalancesController.html":{}}}],["getaggregatedbalances(address",{"_index":76,"title":{},"body":{"controllers/BalancesController.html":{}}}],["getaggrgate",{"_index":108,"title":{},"body":{"injectables/BalancesService.html":{}}}],["getaggrgate(address",{"_index":119,"title":{},"body":{"injectables/BalancesService.html":{}}}],["getallwatchlists",{"_index":316,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["getcoinlist",{"_index":317,"title":{},"body":{"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["getdata",{"_index":109,"title":{},"body":{"injectables/BalancesService.html":{}}}],["getdata(address",{"_index":122,"title":{},"body":{"injectables/BalancesService.html":{}}}],["getdata(address:string",{"_index":200,"title":{},"body":{"injectables/BalancesService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":461,"title":{"index.html":{}},"body":{}}],["getwatchlist",{"_index":318,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["getwatchlist(@param('id",{"_index":382,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["getwatchlist(id",{"_index":339,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["given",{"_index":89,"title":{},"body":{"controllers/BalancesController.html":{}}}],["grow",{"_index":499,"title":{},"body":{"index.html":{}}}],["gzip,deflate,compress",{"_index":190,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["headers",{"_index":187,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["hello",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":509,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":130,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{}}}],["httpexception(\"watchlist",{"_index":276,"title":{},"body":{"injectables/DbService.html":{}}}],["httpexception(error.response.data",{"_index":197,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["httpmodule",{"_index":99,"title":{},"body":{"modules/BalancesModule.html":{},"modules/WatchlistModule.html":{}}}],["https://api.coingecko.com/api/v3/coins/list",{"_index":404,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["https://api.covalenthq.com/v1/${chain}/address/${address",{"_index":184,"title":{},"body":{"injectables/BalancesService.html":{}}}],["https://docs.nestjs.com/modules",{"_index":310,"title":{},"body":{"modules/SharedModule.html":{}}}],["https://nestjs.com",{"_index":516,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":112,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["httpservice,private",{"_index":403,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["httpstatus",{"_index":246,"title":{},"body":{"injectables/DbService.html":{}}}],["httpstatus.not_found",{"_index":277,"title":{},"body":{"injectables/DbService.html":{}}}],["id",{"_index":320,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["identifier",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["injectable",{"_index":49,"title":{"injectables/AppService.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{},"overview.html":{}}}],["installation",{"_index":477,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":479,"title":{},"body":{"index.html":{}}}],["isalphanumeric",{"_index":432,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["isnan(balanceinusd",{"_index":146,"title":{},"body":{"injectables/BalancesService.html":{}}}],["isnotempty",{"_index":221,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["isnotempty({message",{"_index":209,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["isnotempty({message:'missing",{"_index":223,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["item",{"_index":139,"title":{},"body":{"injectables/BalancesService.html":{}}}],["items",{"_index":201,"title":{},"body":{"injectables/BalancesService.html":{}}}],["jmarc@cypherd.io",{"_index":530,"title":{},"body":{"properties.html":{}}}],["join",{"_index":506,"title":{},"body":{"index.html":{}}}],["json.stringify(result",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["kamil",{"_index":513,"title":{},"body":{"index.html":{}}}],["key",{"_index":239,"title":{},"body":{"injectables/DbService.html":{}}}],["length",{"_index":433,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["length(5",{"_index":434,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["license",{"_index":519,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":496,"title":{},"body":{"index.html":{}}}],["local",{"_index":254,"title":{},"body":{"injectables/DbService.html":{},"dependencies.html":{}}}],["logo:logo_url",{"_index":154,"title":{},"body":{"injectables/BalancesService.html":{}}}],["logo_url,contract_ticker_symbol",{"_index":135,"title":{},"body":{"injectables/BalancesService.html":{}}}],["map",{"_index":128,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["map((v:any",{"_index":192,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["mapping.decorator",{"_index":347,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.pow(10",{"_index":143,"title":{},"body":{"injectables/BalancesService.html":{}}}],["matic",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["message",{"_index":213,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["message:\"all",{"_index":268,"title":{},"body":{"injectables/DbService.html":{}}}],["message:\"tokens",{"_index":286,"title":{},"body":{"injectables/DbService.html":{}}}],["message:\"watchlist",{"_index":278,"title":{},"body":{"injectables/DbService.html":{}}}],["metadata",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["miscellaneous",{"_index":458,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["missing",{"_index":210,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{}}}],["mit",{"_index":495,"title":{},"body":{"index.html":{}}}],["mode",{"_index":485,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"modules.html":{},"overview.html":{}}}],["moralis",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["moralisweb3/common",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":508,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":514,"title":{},"body":{"index.html":{}}}],["name",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["name'})@isalphanumeric()@length(5",{"_index":429,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["name:string",{"_index":435,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["nest",{"_index":473,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":518,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":100,"title":{},"body":{"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators/http/request",{"_index":346,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["nestjs/common/exceptions",{"_index":131,"title":{},"body":{"injectables/BalancesService.html":{}}}],["nestjs/config",{"_index":104,"title":{},"body":{"modules/BalancesModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["network",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["new",{"_index":196,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["node.js",{"_index":464,"title":{},"body":{"index.html":{}}}],["npm",{"_index":478,"title":{},"body":{"index.html":{}}}],["number",{"_index":118,"title":{},"body":{"injectables/BalancesService.html":{}}}],["object",{"_index":529,"title":{},"body":{"properties.html":{}}}],["one",{"_index":216,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["open",{"_index":497,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["out",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"overview.html":{}}}],["output",{"_index":94,"title":{},"body":{"controllers/BalancesController.html":{}}}],["outputdata",{"_index":110,"title":{},"body":{"injectables/BalancesService.html":{}}}],["outputdata(data",{"_index":124,"title":{},"body":{"injectables/BalancesService.html":{}}}],["overview",{"_index":523,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":436,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":82,"title":{},"body":{"controllers/BalancesController.html":{},"controllers/WatchlistController.html":{}}}],["param('id",{"_index":373,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["parsefloat(balance",{"_index":142,"title":{},"body":{"injectables/BalancesService.html":{}}}],["parsefloat(quote_rate",{"_index":141,"title":{},"body":{"injectables/BalancesService.html":{}}}],["path",{"_index":256,"title":{},"body":{"injectables/DbService.html":{}}}],["payload",{"_index":324,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["phantom",{"_index":162,"title":{},"body":{"injectables/BalancesService.html":{}}}],["pipe",{"_index":191,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["please",{"_index":214,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"index.html":{}}}],["polygon",{"_index":161,"title":{},"body":{"injectables/BalancesService.html":{}}}],["post",{"_index":344,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["post('/create",{"_index":364,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["post('/create')@usepipes(new",{"_index":327,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["prefix",{"_index":73,"title":{},"body":{"controllers/BalancesController.html":{},"controllers/WatchlistController.html":{}}}],["private",{"_index":227,"title":{},"body":{"injectables/DbService.html":{}}}],["production",{"_index":487,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":463,"title":{},"body":{"index.html":{}}}],["project",{"_index":498,"title":{},"body":{"index.html":{}}}],["promise",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BalancesService.html":{}}}],["properties",{"_index":206,"title":{"properties.html":{}},"body":{"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{},"properties.html":{}}}],["provide",{"_index":215,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{}}}],["put",{"_index":345,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["put('/addtokens/:id",{"_index":371,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["put('/addtokens/:id')@usepipes(new",{"_index":321,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["put('/deletetokens/:id",{"_index":377,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["put('/deletetokens/:id')@usepipes(new",{"_index":330,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["read",{"_index":507,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["reflect",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":476,"title":{},"body":{"index.html":{},"properties.html":{}}}],["require('db",{"_index":253,"title":{},"body":{"injectables/DbService.html":{}}}],["required",{"_index":261,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist",{"_index":273,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist.delete",{"_index":297,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist.foreach((element",{"_index":282,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist.length",{"_index":275,"title":{},"body":{"injectables/DbService.html":{}}}],["reqwlist:any",{"_index":272,"title":{},"body":{"injectables/DbService.html":{}}}],["res",{"_index":168,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["res.result",{"_index":172,"title":{},"body":{"injectables/BalancesService.html":{}}}],["reset",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"overview.html":{}}}],["result",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{}}}],["result.balances.eth",{"_index":171,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.balances.phantom",{"_index":179,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.balances.polygon",{"_index":176,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.push",{"_index":148,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.totalbalanceinusd",{"_index":181,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result.totalbalanceinusd+=res.totalbalance",{"_index":170,"title":{},"body":{"injectables/BalancesService.html":{}}}],["result:any",{"_index":133,"title":{},"body":{"injectables/BalancesService.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["run",{"_index":482,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":129,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["save",{"_index":280,"title":{},"body":{"injectables/DbService.html":{}}}],["scalable",{"_index":468,"title":{},"body":{"index.html":{}}}],["schema",{"_index":255,"title":{},"body":{"injectables/DbService.html":{}}}],["schema('coinlist",{"_index":259,"title":{},"body":{"injectables/DbService.html":{}}}],["schema('watchlists",{"_index":264,"title":{},"body":{"injectables/DbService.html":{}}}],["server",{"_index":469,"title":{},"body":{"index.html":{}}}],["services/balances/balances.service",{"_index":102,"title":{},"body":{"modules/BalancesModule.html":{}}}],["services/watchlist/watchlist.service",{"_index":392,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["set(element.tokens.concat(data",{"_index":284,"title":{},"body":{"injectables/DbService.html":{}}}],["shared",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["sharedmodule",{"_index":37,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule,httpmodule",{"_index":393,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["side",{"_index":470,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BalancesController.html":{},"modules/BalancesModule.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"modules/SharedModule.html":{},"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{},"index.html":{}}}],["sponsors",{"_index":501,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["src/balances/balances.module.ts",{"_index":98,"title":{},"body":{"modules/BalancesModule.html":{}}}],["src/balances/controller/balances/balances.controller.ts",{"_index":72,"title":{},"body":{"controllers/BalancesController.html":{},"coverage.html":{}}}],["src/balances/controller/balances/balances.controller.ts:10",{"_index":79,"title":{},"body":{"controllers/BalancesController.html":{}}}],["src/balances/services/balances/balances.service",{"_index":84,"title":{},"body":{"controllers/BalancesController.html":{}}}],["src/balances/services/balances/balances.service.ts",{"_index":106,"title":{},"body":{"injectables/BalancesService.html":{},"coverage.html":{}}}],["src/balances/services/balances/balances.service.ts:11",{"_index":115,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/balances/services/balances/balances.service.ts:38",{"_index":125,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/balances/services/balances/balances.service.ts:6",{"_index":113,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/balances/services/balances/balances.service.ts:76",{"_index":121,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/balances/services/balances/balances.service.ts:91",{"_index":123,"title":{},"body":{"injectables/BalancesService.html":{}}}],["src/main.ts",{"_index":420,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared",{"_index":348,"title":{},"body":{"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{}}}],["src/shared/db.service.ts",{"_index":226,"title":{},"body":{"injectables/DbService.html":{},"coverage.html":{}}}],["src/shared/db.service.ts:12",{"_index":234,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:33",{"_index":243,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:51",{"_index":236,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:64",{"_index":245,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:81",{"_index":238,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/db.service.ts:98",{"_index":241,"title":{},"body":{"injectables/DbService.html":{}}}],["src/shared/shared.module.ts",{"_index":307,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts",{"_index":312,"title":{},"body":{"controllers/WatchlistController.html":{},"coverage.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:15",{"_index":338,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:22",{"_index":336,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:33",{"_index":328,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:44",{"_index":323,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:56",{"_index":331,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:65",{"_index":341,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/controller/watchlist/watchlist.controller.ts:72",{"_index":334,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/addtoken.dto",{"_index":355,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/createtoken.dto",{"_index":349,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/createtoken.dto.ts",{"_index":205,"title":{},"body":{"classes/CreateTokenDto.html":{},"coverage.html":{}}}],["src/watchlist/dtos/createtoken.dto.ts:6",{"_index":219,"title":{},"body":{"classes/CreateTokenDto.html":{}}}],["src/watchlist/dtos/createwatchlist.dto",{"_index":350,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/createwatchlist.dto.ts",{"_index":425,"title":{},"body":{"coverage.html":{},"classes/createWatchlistDto.html":{}}}],["src/watchlist/dtos/createwatchlist.dto.ts:7",{"_index":431,"title":{},"body":{"classes/createWatchlistDto.html":{}}}],["src/watchlist/dtos/deletetoken.dto",{"_index":351,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/dtos/deletetoken.dto.ts",{"_index":300,"title":{},"body":{"classes/DeleteTokenDto.html":{},"coverage.html":{}}}],["src/watchlist/dtos/deletetoken.dto.ts:6",{"_index":302,"title":{},"body":{"classes/DeleteTokenDto.html":{}}}],["src/watchlist/services/watchlist/watchlist.service",{"_index":353,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts",{"_index":394,"title":{},"body":{"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts:10",{"_index":399,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts:26",{"_index":398,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts:32",{"_index":401,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/watchlist/services/watchlist/watchlist.service.ts:7",{"_index":396,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/watchlist/watchlist.module.ts",{"_index":390,"title":{},"body":{"modules/WatchlistModule.html":{}}}],["start",{"_index":483,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":486,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":488,"title":{},"body":{"index.html":{}}}],["started",{"_index":462,"title":{"index.html":{}},"body":{}}],["starter",{"_index":475,"title":{},"body":{"index.html":{}}}],["statements",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":510,"title":{},"body":{"index.html":{}}}],["string",{"_index":77,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"classes/createWatchlistDto.html":{}}}],["string,chain:number",{"_index":182,"title":{},"body":{"injectables/BalancesService.html":{}}}],["string,data:array",{"_index":290,"title":{},"body":{"injectables/DbService.html":{}}}],["string}/balances_v2/?key=${process.env.covalent_api_key",{"_index":185,"title":{},"body":{"injectables/BalancesService.html":{}}}],["successfully",{"_index":270,"title":{},"body":{"injectables/DbService.html":{}}}],["support",{"_index":502,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":521,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":165,"title":{},"body":{"injectables/BalancesService.html":{}}}],["symbol",{"_index":149,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{}}}],["table",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":491,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":494,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":493,"title":{},"body":{"index.html":{}}}],["tests",{"_index":490,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":500,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.balancesservice.getdata(address",{"_index":93,"title":{},"body":{"controllers/BalancesController.html":{}}}],["this.balancesservice.outputdata(result",{"_index":95,"title":{},"body":{"controllers/BalancesController.html":{}}}],["this.coinlist",{"_index":258,"title":{},"body":{"injectables/DbService.html":{}}}],["this.db.create('vitalikwatchlist",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["this.dbservice.create(name",{"_index":405,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["this.dbservice.create(payload.name",{"_index":369,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.delete(id",{"_index":380,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.deletewatchlist(name",{"_index":386,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.find('all",{"_index":362,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.find(id",{"_index":383,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.dbservice.update(id",{"_index":375,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.formatdata(data.items[0",{"_index":169,"title":{},"body":{"injectables/BalancesService.html":{}}}],["this.formatdata(data.items[1",{"_index":175,"title":{},"body":{"injectables/BalancesService.html":{}}}],["this.formatdata(data.items[2",{"_index":178,"title":{},"body":{"injectables/BalancesService.html":{}}}],["this.getcoinlist",{"_index":407,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["this.httpservice.get(url",{"_index":186,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["this.watchlists",{"_index":263,"title":{},"body":{"injectables/DbService.html":{}}}],["this.watchlists.create",{"_index":279,"title":{},"body":{"injectables/DbService.html":{}}}],["this.watchlists.find",{"_index":267,"title":{},"body":{"injectables/DbService.html":{}}}],["this.watchlists.find({_id:key",{"_index":295,"title":{},"body":{"injectables/DbService.html":{}}}],["this.watchlistservice.getcoinlist",{"_index":361,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.watchlistservice.validatetokens(payload.tokenstobeadded",{"_index":374,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["this.watchlistservice.validatetokens(payload.tokenstobedeleted",{"_index":379,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["throw",{"_index":195,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{},"injectables/WatchlistService.html":{}}}],["token",{"_index":217,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{}}}],["tokens",{"_index":266,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["tokens.filter((v:any",{"_index":409,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["tokenstobeadded",{"_index":207,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["tokenstobeadded'})@arrayminsize(1",{"_index":212,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{}}}],["tokenstobeadded:array",{"_index":225,"title":{},"body":{"classes/CreateTokenDto.html":{}}}],["tokenstobedeleted",{"_index":301,"title":{},"body":{"classes/DeleteTokenDto.html":{}}}],["tokenstobedeleted:array",{"_index":303,"title":{},"body":{"classes/DeleteTokenDto.html":{}}}],["totalbalance",{"_index":117,"title":{},"body":{"injectables/BalancesService.html":{}}}],["totalbalance,result",{"_index":157,"title":{},"body":{"injectables/BalancesService.html":{}}}],["totalbalanceinusd",{"_index":163,"title":{},"body":{"injectables/BalancesService.html":{}}}],["touch",{"_index":511,"title":{},"body":{"index.html":{}}}],["transform",{"_index":366,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["transformer",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":262,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["twitter",{"_index":517,"title":{},"body":{"index.html":{}}}],["type",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"classes/CreateTokenDto.html":{},"injectables/DbService.html":{},"classes/DeleteTokenDto.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"classes/createWatchlistDto.html":{}}}],["typeof",{"_index":145,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/DbService.html":{}}}],["typescript",{"_index":474,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":274,"title":{},"body":{"injectables/DbService.html":{}}}],["unit",{"_index":489,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":81,"title":{},"body":{"controllers/BalancesController.html":{},"injectables/BalancesService.html":{},"injectables/DbService.html":{},"controllers/WatchlistController.html":{},"injectables/WatchlistService.html":{}}}],["unlicensed",{"_index":528,"title":{},"body":{"properties.html":{}}}],["update",{"_index":233,"title":{},"body":{"injectables/DbService.html":{}}}],["update(key",{"_index":244,"title":{},"body":{"injectables/DbService.html":{}}}],["updatedtokens",{"_index":283,"title":{},"body":{"injectables/DbService.html":{}}}],["url",{"_index":183,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["usepipes",{"_index":343,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["usepipes(new",{"_index":365,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["utils",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["uuid",{"_index":247,"title":{},"body":{"injectables/DbService.html":{}}}],["uuidv4",{"_index":248,"title":{},"body":{"injectables/DbService.html":{},"dependencies.html":{}}}],["v",{"_index":412,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["v.data",{"_index":193,"title":{},"body":{"injectables/BalancesService.html":{},"injectables/WatchlistService.html":{}}}],["v4",{"_index":250,"title":{},"body":{"injectables/DbService.html":{}}}],["validatetokens",{"_index":395,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["validatetokens(tokens",{"_index":400,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["validationpipe",{"_index":322,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["validator",{"_index":222,"title":{},"body":{"classes/CreateTokenDto.html":{},"classes/DeleteTokenDto.html":{},"classes/createWatchlistDto.html":{},"dependencies.html":{}}}],["values",{"_index":408,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["var",{"_index":167,"title":{},"body":{"injectables/BalancesService.html":{}}}],["version",{"_index":526,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":484,"title":{},"body":{"index.html":{}}}],["watchlist",{"_index":288,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["watchlist/watchlist.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["watchlistcontroller",{"_index":311,"title":{"controllers/WatchlistController.html":{}},"body":{"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"coverage.html":{}}}],["watchlistmodule",{"_index":38,"title":{"modules/WatchlistModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WatchlistModule.html":{},"modules.html":{},"overview.html":{}}}],["watchlists",{"_index":228,"title":{},"body":{"injectables/DbService.html":{},"controllers/WatchlistController.html":{}}}],["watchlistservice",{"_index":352,"title":{"injectables/WatchlistService.html":{}},"body":{"controllers/WatchlistController.html":{},"modules/WatchlistModule.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"overview.html":{}}}],["watchlistservice,private",{"_index":357,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["website",{"_index":515,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":367,"title":{},"body":{"controllers/WatchlistController.html":{}}}],["wold",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":505,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/BalancesModule.html":{},"modules/SharedModule.html":{},"modules/WatchlistModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('/')\n  async getHello(): Promise {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBalancesModule\n\nBalancesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBalancesModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nWatchlistModule\n\nWatchlistModule\n\nAppModule -->\n\nWatchlistModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BalancesModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            WatchlistModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from './shared';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BalancesModule } from './balances/balances.module';\nimport { WatchlistModule } from './watchlist/watchlist.module';\n\n@Module({\n  imports: [SharedModule, BalancesModule, WatchlistModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: DbService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { DbService } from './shared';\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly db: DbService) {}\n  async getHello(): Promise {\n    const result = await this.db.create('vitalikWatchlist', ['matic-network']);\n    return `Hello Wold! ${JSON.stringify(result)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BalancesController.html":{"url":"controllers/BalancesController.html","title":"controller - BalancesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BalancesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balances/controller/balances/balances.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                balance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAggregatedBalances\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAggregatedBalances\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregatedBalances(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:address')\n                \n            \n\n            \n                \n                    Defined in src/balances/controller/balances/balances.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { BalancesService } from 'src/balances/services/balances/balances.service';\n\n@Controller('balance')\nexport class BalancesController {\n    constructor(private readonly balancesService: BalancesService) {}\n    \n    //1 Get aggregated balances for a given address\n    @Get('/:address')\n    async getAggregatedBalances(@Param('address') address: string) {\n        const chains = [1,137,250];\n        const result = await this.balancesService.getData(address, chains);\n        const output = this.balancesService.outputData(result, chains);\n        return output;\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BalancesModule.html":{"url":"modules/BalancesModule.html","title":"module - BalancesModule","body":"\n                   \n\n\n\n\n    Modules\n    BalancesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BalancesModule\n\n\n\ncluster_BalancesModule_providers\n\n\n\n\nBalancesService\n\nBalancesService\n\n\n\nBalancesModule\n\nBalancesModule\n\nBalancesModule -->\n\nBalancesService->BalancesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/balances/balances.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BalancesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BalancesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { BalancesController } from './controller/balances/balances.controller';\nimport { BalancesService } from './services/balances/balances.service';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [ ConfigModule.forRoot(),HttpModule],\n  providers: [BalancesService],\n  controllers: [BalancesController]\n})\nexport class BalancesModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BalancesService.html":{"url":"injectables/BalancesService.html","title":"injectable - BalancesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BalancesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/balances/services/balances/balances.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatData\n                            \n                            \n                                    Async\n                                getAggrgate\n                            \n                            \n                                    Async\n                                getData\n                            \n                            \n                                outputData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/balances/services/balances/balances.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatData\n                        \n                    \n                \n            \n            \n                \nformatData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/balances/services/balances/balances.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { Totalbalance: number; result: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAggrgate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggrgate(address: string, chain: number)\n                \n            \n\n\n            \n                \n                    Defined in src/balances/services/balances/balances.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chain\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getData(address: string, chains: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/balances/services/balances/balances.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chains\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputData\n                        \n                    \n                \n            \n            \n                \noutputData(data: any, chains: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/balances/services/balances/balances.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chains\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { catchError, firstValueFrom, map } from 'rxjs';\nimport { HttpException } from '@nestjs/common/exceptions';\n@Injectable()\nexport class BalancesService {\n    constructor(private readonly httpService: HttpService) {\n\n    }\n\n    formatData(data: any){\n      let Totalbalance = 0.0;\n      let result:any = [];\n      data.forEach((item: any) => {\n        const { logo_url,contract_ticker_symbol, contract_name, contract_decimals,  balance, contract_address } = item;\n        // const balanceInUSD = parseFloat(quote_rate) * parseFloat(balance) / Math.pow(10, contract_decimals);\n        // console.log(balanceInUSD);\n        // if( typeof balanceInUSD === 'number' && !isNaN(balanceInUSD)){\n          \n        //   Totalbalance += balanceInUSD;\n        // }\n        const balanceInUSD = parseFloat(balance) / Math.pow(10, contract_decimals); // formula unknown\n        result.push({\n            name: contract_name,\n            symbol: contract_ticker_symbol,\n            decimals: contract_decimals,\n            contractAddress:contract_address,\n            contractDecimals:contract_decimals,\n            logo:logo_url,\n            balance:balance,\n            balanceInUSD:\"$\"+balanceInUSD\n        })\n      });\n    return {Totalbalance,result};\n    }\n\n\n    outputData(data: any, chains:number[]): any {\n        const result: any = {\n            address: data.address,\n            balances: {\n              eth:[],\n              polygon:[],\n              phantom:[]\n            },\n            totalBalanceInUSD: 0.0\n          }\n        \n        chains.forEach((chain) => {\n  \n          switch (chain) {\n            case 1:\n              \n              var res = this.formatData(data.items[0])\n              result.totalBalanceInUSD+=res.Totalbalance;\n              result.balances.eth = res.result;\n              break;\n            case 137:\n              var res = this.formatData(data.items[1])\n              result.totalBalanceInUSD+=res.Totalbalance;\n              result.balances.polygon = res.result;\n              break;\n            case 250:\n              var res = this.formatData(data.items[2])\n              result.totalBalanceInUSD+=res.Totalbalance;\n              result.balances.phantom = res.result;\n              break;\n            default:\n              break;\n          }\n        });\n        result.totalBalanceInUSD = \"$\"+result.totalBalanceInUSD;\n        return result;\n    }\n\n    async getAggrgate(address: string,chain:number): Promise{\n        const url = `https://api.covalenthq.com/v1/${chain}/address/${address as string}/balances_v2/?key=${process.env.COVALENT_API_KEY as string}`;\n        const { data }: any = await firstValueFrom(\n            this.httpService.get(url, {\n              headers: { \"Accept-Encoding\": \"gzip,deflate,compress\" }\n            }).pipe(\n              map((v:any) => { return v.data }),\n              catchError((error) => {\n                throw new HttpException(error.response.data, error.response.status);\n              }),\n            ),\n          );\n        return data.items;\n    }\n\n    async getData(address:string, chains:number[]){\n      const result:any = {\n        address: address,\n        items: []\n      }\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTokenDto.html":{"url":"classes/CreateTokenDto.html","title":"class - CreateTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/dtos/CreateToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tokensToBeAdded\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tokensToBeAdded\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Missing field tokensToBeAdded'})@ArrayMinSize(1, {message: 'Please provide at least one token to add'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/watchlist/dtos/CreateToken.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsNotEmpty } from \"class-validator\";\n\nexport class CreateTokenDto{\n    @IsNotEmpty({message:'Missing field tokensToBeAdded'})\n    @ArrayMinSize(1,{message:'Please provide at least one token to add'})\n    tokensToBeAdded:Array;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DbService.html":{"url":"injectables/DbService.html","title":"injectable - DbService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/db.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                WatchLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteWatchlist\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/db.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string, data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWatchlist(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(key: string, data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/db.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        WatchLists\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/shared/db.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n// import { uuid } from 'uuidv4';  //dprecated\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable()\nexport class DbService {\n  private WatchLists;\n  // private coinList;\n\n  constructor() {\n    const dbLocal = require('db-local');\n    const { Schema } = new dbLocal({ path: './databases' });\n\n    // this.coinList = Schema('coinList', {\n    //   _id: { type: String, required: true },\n    //   symbol: { type: String, required: true },\n    //   name: { type: String, required: true }\n    // });\n\n    \n    this.WatchLists = Schema('WatchLists', {\n      _id: { type: String, required: true },\n      name: { type: String, default: 'Customer' },\n      tokens: { type: Array, default: [] },\n    });\n  }\n\n  async find(key: string) {\n    if (key === 'All') {\n      const res = this.WatchLists.find();\n      return {\n        message:\"All Watchlists found successfully\",\n        data:res\n      };\n    }\n    const reqWList:any = this.WatchLists.find({ _id: key });\n    if (typeof reqWList !== 'undefined' && reqWList.length === 0) {\n      throw new HttpException(\"Watchlist Not Found\", HttpStatus.NOT_FOUND);\n    }\n    return {\n      message:\"Watchlist found successfully\",\n      data: reqWList\n    };\n  }\n\n  async create(name: string, data: Array) {\n    const res = this.WatchLists.create({\n      _id: uuidv4(),\n      name: name,\n      tokens: data,\n    }).save();\n    return {\n      message:\"Watchlist created successfully\",\n      data:res\n    };\n  }\n\n\n  async update(key: string, data: Array) {\n    const reqWList:any = this.WatchLists.find({ _id: key });\n    if (typeof reqWList !== 'undefined' && reqWList.length === 0) {\n      throw new HttpException(\"Watchlist Not Found\", HttpStatus.NOT_FOUND);\n    }\n    reqWList.forEach((element: any) => {\n    const updatedTokens = [...new Set(element.tokens.concat(data))];\n    element.update({ tokens: updatedTokens }).save();\n    \n    });\n    return {\n      message:\"Tokens added to watchlist successfully\",\n      data:data\n    }\n  }\n\n\n  async delete(key: string,data:Array) {\n    const reqWList:any = this.WatchLists.find({ _id: key });\n    console.log(reqWList);\n    if (typeof reqWList !== 'undefined' && reqWList.length === 0) {\n      throw new HttpException(\"Watchlist Not Found\", HttpStatus.NOT_FOUND);\n    }\n\n    reqWList.forEach((element: any) => {\n    const updatedTokens = element.tokens.filter((item: any) => !data.includes(item));\n    element.update({ tokens: updatedTokens }).save();\n    });\n    return {\n      message:\"Tokens deleted from watchlist successfully\",\n      data:data\n    }\n  }\n\n  async deleteWatchlist(key: string) {\n    const reqWList = this.WatchLists.find({_id:key });\n    console.log(reqWList);\n    if (typeof reqWList !== 'undefined' && reqWList.length === 0) {\n      throw new HttpException(\"Watchlist Not Found\", HttpStatus.NOT_FOUND);\n    }\n    reqWList.forEach((element: any) => {\n      element.remove();\n    });\n    // const res = reqWList.delete();\n    return {\n      message:\"Watchlist deleted successfully\",\n      data:reqWList\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteTokenDto.html":{"url":"classes/DeleteTokenDto.html","title":"class - DeleteTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/dtos/DeleteToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tokensToBeDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tokensToBeDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Missing field tokensToBeAdded'})@ArrayMinSize(1, {message: 'Please provide at least one token to add'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/watchlist/dtos/DeleteToken.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsNotEmpty } from \"class-validator\";\n\nexport class DeleteTokenDto{\n    @IsNotEmpty({message:'Missing field tokensToBeAdded'})\n    @ArrayMinSize(1,{message:'Please provide at least one token to add'})\n    tokensToBeDeleted:Array;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nDbService \n\nDbService \n\n\n\nSharedModule\n\nSharedModule\n\nDbService  -->\n\nSharedModule->DbService \n\n\n\n\n\nDbService\n\nDbService\n\nSharedModule -->\n\nDbService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DbService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DbService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DbService } from './db.service';\n/*\nhttps://docs.nestjs.com/modules\n*/\n\nimport { Module } from '@nestjs/common';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [DbService],\n  exports: [DbService],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WatchlistController.html":{"url":"controllers/WatchlistController.html","title":"controller - WatchlistController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WatchlistController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/controller/watchlist/watchlist.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                watchlist\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTokens\n                            \n                            \n                                    Async\n                                createWatchlist\n                            \n                            \n                                    Async\n                                deleteTokens\n                            \n                            \n                                    Async\n                                deleteWatchlist\n                            \n                            \n                                    Async\n                                getAllWatchlists\n                            \n                            \n                                    Async\n                                getCoinList\n                            \n                            \n                                    Async\n                                getWatchlist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTokens(payload: CreateTokenDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/addTokens/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWatchlist(payload: createWatchlistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                createWatchlistDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTokens(payload: DeleteTokenDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/deleteTokens/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                DeleteTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWatchlist(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete/:name')\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllWatchlists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllWatchlists()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCoinList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoinList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/coinlist')\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWatchlist(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/get/:id')\n                \n            \n\n            \n                \n                    Defined in src/watchlist/controller/watchlist/watchlist.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller,  Param, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { Delete, Get, Post, Put } from '@nestjs/common/decorators/http/request-mapping.decorator';\nimport { DbService } from 'src/shared';\nimport { CreateTokenDto } from 'src/watchlist/dtos/CreateToken.dto';\nimport { createWatchlistDto } from 'src/watchlist/dtos/CreateWatchlist.dto';\nimport { DeleteTokenDto } from 'src/watchlist/dtos/DeleteToken.dto';\nimport { WatchlistService } from 'src/watchlist/services/watchlist/watchlist.service';\n// import { AddTokenDto } from 'src/watchlist/dtos/AddToken.dto';\n@Controller('watchlist')\nexport class WatchlistController {\n    constructor(private readonly watchlistService: WatchlistService,private readonly dbservice:DbService) {}\n\n    //2.1 Get all coins\n    @Get('/coinlist')\n    async getCoinList() {\n        const data = await this.watchlistService.getCoinList();\n        return data;\n    }\n\n    //Get all watchlists\n    @Get('/getAll')\n    async getAllWatchlists() {\n        const data = await this.dbservice.find('All');\n        return data;\n    }\n\n    //2.2 Create watchlist\n    @Post('/create')\n    @UsePipes(new ValidationPipe({\n        transform: true,\n        whitelist: true,\n    }))\n    async createWatchlist(@Body() payload: createWatchlistDto) {\n        const data = await this.dbservice.create(payload.name, []);\n        return data;\n    }\n\n    //2.3 Add token to watchlist by ID\n    @Put('/addTokens/:id')\n    @UsePipes(new ValidationPipe({\n        transform: true,\n        whitelist: true,\n    }))\n    async addTokens(@Body() payload: CreateTokenDto, @Param('id') id: string) {\n        const tokens = await this.watchlistService.validateTokens(payload.tokensToBeAdded);\n        const res = await this.dbservice.update(id, tokens);\n        return res;\n    }\n\n    //2.4 Delete tokens from watchlist by ID\n    @Put('/deleteTokens/:id')\n    @UsePipes(new ValidationPipe({\n        transform: true,\n        whitelist: true,\n    }))\n    async deleteTokens(@Body() payload: DeleteTokenDto, @Param('id') id: string) {\n        const tokens = await this.watchlistService.validateTokens(payload.tokensToBeDeleted);\n        const res = await this.dbservice.delete(id, tokens);\n        return res;\n    }\n\n\n    //2.5 Get watchlist by ID\n    @Get('/get/:id')\n    async getWatchlist(@Param('id') id: string) {\n        const data = await this.dbservice.find(id);\n        return data;\n    }\n\n    //2.6 Delete watchlist by ID\n    @Delete('/delete/:name')\n    async deleteWatchlist(@Param('name') name: string) {\n        const data = await this.dbservice.deleteWatchlist(name);\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WatchlistModule.html":{"url":"modules/WatchlistModule.html","title":"module - WatchlistModule","body":"\n                   \n\n\n\n\n    Modules\n    WatchlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WatchlistModule\n\n\n\ncluster_WatchlistModule_providers\n\n\n\ncluster_WatchlistModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nWatchlistModule\n\nWatchlistModule\n\nWatchlistModule -->\n\nSharedModule->WatchlistModule\n\n\n\n\n\nWatchlistService\n\nWatchlistService\n\nWatchlistModule -->\n\nWatchlistService->WatchlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/watchlist/watchlist.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WatchlistService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WatchlistController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { SharedModule } from 'src/shared';\nimport { WatchlistController } from './controller/watchlist/watchlist.controller';\nimport { WatchlistService } from './services/watchlist/watchlist.service';\n\n@Module({\n  imports: [SharedModule,HttpModule],\n  controllers: [WatchlistController],\n  providers: [WatchlistService]\n})\nexport class WatchlistModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistService.html":{"url":"injectables/WatchlistService.html","title":"injectable - WatchlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/services/watchlist/watchlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createWatchlist\n                            \n                            \n                                    Async\n                                getCoinList\n                            \n                            \n                                    Async\n                                validateTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, dbService: DbService)\n                    \n                \n                        \n                            \n                                Defined in src/watchlist/services/watchlist/watchlist.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createWatchlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWatchlist(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/watchlist/services/watchlist/watchlist.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCoinList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoinList()\n                \n            \n\n\n            \n                \n                    Defined in src/watchlist/services/watchlist/watchlist.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateTokens(tokens: any)\n                \n            \n\n\n            \n                \n                    Defined in src/watchlist/services/watchlist/watchlist.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { BadRequestException, HttpException, Injectable } from '@nestjs/common';\nimport { catchError, firstValueFrom, map } from 'rxjs';\nimport { DbService } from 'src/shared';\n\n@Injectable()\nexport class WatchlistService {\n    constructor(private readonly httpService: HttpService,private readonly dbService:DbService) {}\n\n    async getCoinList() {\n        const url = `https://api.coingecko.com/api/v3/coins/list`;\n        \n        const  data : any = await firstValueFrom(\n            this.httpService.get(url, {\n              headers: { \"Accept-Encoding\": \"gzip,deflate,compress\" }\n            }).pipe(\n              map((v:any) => { return v.data }),\n              catchError((error) => {\n                throw new HttpException(error.response.data, error.response.status);\n              }),\n            ),\n          );\n        return data;\n    }\n\n    async createWatchlist(name: string) {\n      const data = await this.dbService.create(name, []);\n      return data;\n        \n    }\n\n    async validateTokens(tokens: any){\n        const chainList = await this.getCoinList();\n        const values = tokens.filter((v:any) => chainList.some((c:any) => c.id == v));\n        return values;\n    }\n\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/balances/controller/balances/balances.controller.ts\n            \n            controller\n            BalancesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/balances/services/balances/balances.service.ts\n            \n            injectable\n            BalancesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/db.service.ts\n            \n            injectable\n            DbService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/watchlist/controller/watchlist/watchlist.controller.ts\n            \n            controller\n            WatchlistController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/watchlist/dtos/CreateToken.dto.ts\n            \n            class\n            CreateTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/watchlist/dtos/CreateWatchlist.dto.ts\n            \n            class\n            createWatchlistDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/watchlist/dtos/DeleteToken.dto.ts\n            \n            class\n            DeleteTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/watchlist/services/watchlist/watchlist.service.ts\n            \n            injectable\n            WatchlistService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createWatchlistDto.html":{"url":"classes/createWatchlistDto.html","title":"class - createWatchlistDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createWatchlistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/watchlist/dtos/CreateWatchlist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Missing field name'})@IsAlphanumeric()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/watchlist/dtos/CreateWatchlist.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty, Length } from \"class-validator\";\n\nexport class createWatchlistDto {\n    @IsNotEmpty({message:'Missing field name'})\n    @IsAlphanumeric()\n    @Length(5, 20)\n    name:string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @moralisweb3/common-evm-utils : ^2.12.0\n        \n            @nestjs/axios : ^1.0.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            db-local : ^2.9.0\n        \n            express : ^4.18.2\n        \n            moralis : ^2.12.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            uuidv4 : ^6.2.13\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BalancesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WatchlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BalancesModule\n\n\n\ncluster_BalancesModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_WatchlistModule\n\n\n\ncluster_WatchlistModule_providers\n\n\n\n\nBalancesModule\n\nBalancesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBalancesModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nWatchlistModule\n\nWatchlistModule\n\nWatchlistModule -->\n\nSharedModule->WatchlistModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDbService \n\nDbService \n\nDbService  -->\n\nSharedModule->DbService \n\n\n\nAppModule -->\n\nWatchlistModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBalancesService\n\nBalancesService\n\nBalancesModule -->\n\nBalancesService->BalancesModule\n\n\n\n\n\nDbService\n\nDbService\n\nSharedModule -->\n\nDbService->SharedModule\n\n\n\n\n\nWatchlistService\n\nWatchlistService\n\nWatchlistModule -->\n\nWatchlistService->WatchlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Repository : [object Object]\n        \n            Author : jmarc@cypherd.io\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
